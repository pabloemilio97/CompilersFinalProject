Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> PROGRAM_RULE
Rule 1     empty -> <empty>
Rule 2     PROGRAM_RULE -> PROGRAM ID SEMICOLON VARS BODY MAIN_RULE
Rule 3     MAIN_RULE -> MAIN LPAREN RPAREN LCURLY STATEMENTS RCURLY
Rule 4     BODY -> FUNCTION_RULE BODY
Rule 5     BODY -> empty
Rule 6     TYPE -> INT
Rule 7     TYPE -> FLOAT
Rule 8     TYPE -> CHAR
Rule 9     VARS -> LET TYPE COLON ID_LIST SEMICOLON VARS
Rule 10    VARS -> empty
Rule 11    ID_LIST -> ID ID_LIST_AUX
Rule 12    ID_LIST -> MULTIDIMENSIONAL ID_LIST_AUX
Rule 13    ID_LIST_AUX -> COMMA ID_LIST
Rule 14    ID_LIST_AUX -> empty
Rule 15    FUNCTION_RULE -> FUNCTION_AUX FUNCTION ID LPAREN PARAM RPAREN FUNCTION_BODY
Rule 16    FUNCTION_AUX -> TYPE
Rule 17    FUNCTION_AUX -> VOID
Rule 18    MULTIDIMENSIONAL -> ID LBRACKET CTEI RBRACKET
Rule 19    MULTIDIMENSIONAL -> ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
Rule 20    PARAM -> TYPE ID PARAM_AUX
Rule 21    PARAM -> empty
Rule 22    PARAM_AUX -> COMMA PARAM_AUX2
Rule 23    PARAM_AUX -> empty
Rule 24    PARAM_AUX2 -> TYPE ID PARAM_AUX
Rule 25    FUNCTION_BODY -> VARS LCURLY STATEMENTS FUNCTION_BODY_AUX RCURLY
Rule 26    FUNCTION_BODY_AUX -> FUNCTION_RETURN
Rule 27    FUNCTION_BODY_AUX -> empty
Rule 28    STATEMENTS -> STATEMENTS_AUX
Rule 29    STATEMENTS -> empty
Rule 30    STATEMENTS_AUX -> ASSIGNMENT STATEMENTS
Rule 31    STATEMENTS_AUX -> FUNCTION_CALL STATEMENTS
Rule 32    STATEMENTS_AUX -> READ_RULE STATEMENTS
Rule 33    STATEMENTS_AUX -> WRITE_RULE STATEMENTS
Rule 34    STATEMENTS_AUX -> IF_RULE STATEMENTS
Rule 35    STATEMENTS_AUX -> WHILE_RULE STATEMENTS
Rule 36    STATEMENTS_AUX -> FOR_RULE STATEMENTS
Rule 37    ASSIGNMENT -> VAR EQUALS EXPRESSION SEMICOLON
Rule 38    FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON
Rule 39    FUNCTION_CALL_AUX -> COMMA EXPRESSION FUNCTION_CALL_AUX
Rule 40    FUNCTION_CALL_AUX -> empty
Rule 41    READ_RULE -> READ LPAREN VAR READ_AUX RPAREN SEMICOLON
Rule 42    READ_AUX -> COMMA VAR READ_AUX
Rule 43    READ_AUX -> empty
Rule 44    WRITE_RULE -> WRITE LPAREN WRITE_AUX WRITE_AUX2 RPAREN SEMICOLON
Rule 45    WRITE_AUX -> CTESTRING
Rule 46    WRITE_AUX -> EXPRESSION
Rule 47    WRITE_AUX2 -> COMMA WRITE_AUX WRITE_AUX2
Rule 48    WRITE_AUX2 -> empty
Rule 49    VAR -> ID
Rule 50    VAR -> ID LBRACKET EXPRESSION RBRACKET
Rule 51    VAR -> ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET
Rule 52    FUNCTION_RETURN -> RETURN EXPRESSION SEMICOLON
Rule 53    IF_RULE -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY
Rule 54    WHILE_RULE -> WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
Rule 55    FOR_RULE -> FOR LPAREN VAR EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
Rule 56    EXPRESSION -> AND_EXPRESSION EXPRESSION_AUX
Rule 57    EXPRESSION_AUX -> OR EXPRESSION
Rule 58    EXPRESSION_AUX -> empty
Rule 59    AND_EXPRESSION -> COMPARE_EXPRESSION AND_EXPRESSION_AUX
Rule 60    AND_EXPRESSION_AUX -> AND AND_EXPRESSION
Rule 61    AND_EXPRESSION_AUX -> empty
Rule 62    COMPARE_EXPRESSION -> ARITHMETIC_EXPRESSION COMPARE_EXPRESSION_AUX ARITHMETIC_EXPRESSION
Rule 63    COMPARE_EXPRESSION_AUX -> COMPARE_EXPRESSION_AUX2 ARITHMETIC_EXPRESSION
Rule 64    COMPARE_EXPRESSION_AUX2 -> LESSTHAN
Rule 65    COMPARE_EXPRESSION_AUX2 -> GREATERTHAN
Rule 66    COMPARE_EXPRESSION_AUX2 -> DOUBLEEQUALS
Rule 67    COMPARE_EXPRESSION_AUX2 -> NOTEQUALS
Rule 68    ARITHMETIC_EXPRESSION -> TERM ARITHMETIC_EXPRESSION_AUX
Rule 69    ARITHMETIC_EXPRESSION_AUX -> ARITHMETIC_EXPRESSION_AUX2 ARITHMETIC_EXPRESSION
Rule 70    ARITHMETIC_EXPRESSION_AUX -> empty
Rule 71    ARITHMETIC_EXPRESSION_AUX2 -> PLUS
Rule 72    ARITHMETIC_EXPRESSION_AUX2 -> MINUS
Rule 73    TERM -> FACTOR TERM_AUX
Rule 74    TERM_AUX -> TERM_AUX2 TERM
Rule 75    TERM_AUX -> empty
Rule 76    TERM_AUX2 -> MULTIPLY
Rule 77    TERM_AUX2 -> DIVIDE
Rule 78    FACTOR -> LPAREN EXPRESSION RPAREN
Rule 79    FACTOR -> CTEI
Rule 80    FACTOR -> CTESTRING
Rule 81    FACTOR -> CTEF
Rule 82    FACTOR -> VAR
Rule 83    FACTOR -> FUNCTION_CALL

Terminals, with rules where they appear

AND                  : 60
CHAR                 : 8
COLON                : 9
COMMA                : 13 22 39 42 47
COMMENT              : 
CTEF                 : 81
CTEI                 : 18 19 19 79
CTESTRING            : 45 80
DIVIDE               : 77
DOUBLEEQUALS         : 66
ELSE                 : 53
EQUALS               : 37 55
FLOAT                : 7
FOR                  : 55
FUNCTION             : 15
GREATERTHAN          : 65
ID                   : 2 11 15 18 19 20 24 38 49 50 51
IF                   : 53
INT                  : 6
LBRACKET             : 18 19 19 50 51 51
LCURLY               : 3 25 53 53 54 55
LESSTHAN             : 64
LET                  : 9
LPAREN               : 3 15 38 41 44 53 54 55 78
MAIN                 : 3
MINUS                : 72
MULTIPLY             : 76
NOTEQUALS            : 67
OR                   : 57
PLUS                 : 71
PROGRAM              : 2
RBRACKET             : 18 19 19 50 51 51
RCURLY               : 3 25 53 53 54 55
READ                 : 41
RETURN               : 52
RPAREN               : 3 15 38 41 44 53 54 55 78
SEMICOLON            : 2 9 37 38 41 44 52
TO                   : 55
VOID                 : 17
WHILE                : 54
WRITE                : 44
error                : 

Nonterminals, with rules where they appear

AND_EXPRESSION       : 56 60
AND_EXPRESSION_AUX   : 59
ARITHMETIC_EXPRESSION : 62 62 63 69
ARITHMETIC_EXPRESSION_AUX : 68
ARITHMETIC_EXPRESSION_AUX2 : 69
ASSIGNMENT           : 30
BODY                 : 2 4
COMPARE_EXPRESSION   : 59
COMPARE_EXPRESSION_AUX : 62
COMPARE_EXPRESSION_AUX2 : 63
EXPRESSION           : 37 38 39 46 50 51 51 52 53 54 55 55 57 78
EXPRESSION_AUX       : 56
FACTOR               : 73
FOR_RULE             : 36
FUNCTION_AUX         : 15
FUNCTION_BODY        : 15
FUNCTION_BODY_AUX    : 25
FUNCTION_CALL        : 31 83
FUNCTION_CALL_AUX    : 38 39
FUNCTION_RETURN      : 26
FUNCTION_RULE        : 4
ID_LIST              : 9 13
ID_LIST_AUX          : 11 12
IF_RULE              : 34
MAIN_RULE            : 2
MULTIDIMENSIONAL     : 12
PARAM                : 15
PARAM_AUX            : 20 24
PARAM_AUX2           : 22
PROGRAM_RULE         : 0
READ_AUX             : 41 42
READ_RULE            : 32
STATEMENTS           : 3 25 30 31 32 33 34 35 36 53 53 54 55
STATEMENTS_AUX       : 28
TERM                 : 68 74
TERM_AUX             : 73
TERM_AUX2            : 74
TYPE                 : 9 16 20 24
VAR                  : 37 41 42 55 82
VARS                 : 2 9 25
WHILE_RULE           : 35
WRITE_AUX            : 44 47
WRITE_AUX2           : 44 47
WRITE_RULE           : 33
empty                : 5 10 14 21 23 27 29 40 43 48 58 61 70 75

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM_RULE
    (2) PROGRAM_RULE -> . PROGRAM ID SEMICOLON VARS BODY MAIN_RULE

    PROGRAM         shift and go to state 2

    PROGRAM_RULE                   shift and go to state 1

state 1

    (0) S' -> PROGRAM_RULE .



state 2

    (2) PROGRAM_RULE -> PROGRAM . ID SEMICOLON VARS BODY MAIN_RULE

    ID              shift and go to state 3


state 3

    (2) PROGRAM_RULE -> PROGRAM ID . SEMICOLON VARS BODY MAIN_RULE

    SEMICOLON       shift and go to state 4


state 4

    (2) PROGRAM_RULE -> PROGRAM ID SEMICOLON . VARS BODY MAIN_RULE
    (9) VARS -> . LET TYPE COLON ID_LIST SEMICOLON VARS
    (10) VARS -> . empty
    (1) empty -> .

    LET             shift and go to state 6
    VOID            reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    MAIN            reduce using rule 1 (empty -> .)

    VARS                           shift and go to state 5
    empty                          shift and go to state 7

state 5

    (2) PROGRAM_RULE -> PROGRAM ID SEMICOLON VARS . BODY MAIN_RULE
    (4) BODY -> . FUNCTION_RULE BODY
    (5) BODY -> . empty
    (15) FUNCTION_RULE -> . FUNCTION_AUX FUNCTION ID LPAREN PARAM RPAREN FUNCTION_BODY
    (1) empty -> .
    (16) FUNCTION_AUX -> . TYPE
    (17) FUNCTION_AUX -> . VOID
    (6) TYPE -> . INT
    (7) TYPE -> . FLOAT
    (8) TYPE -> . CHAR

    MAIN            reduce using rule 1 (empty -> .)
    VOID            shift and go to state 13
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    BODY                           shift and go to state 8
    FUNCTION_RULE                  shift and go to state 9
    empty                          shift and go to state 10
    FUNCTION_AUX                   shift and go to state 11
    TYPE                           shift and go to state 12

state 6

    (9) VARS -> LET . TYPE COLON ID_LIST SEMICOLON VARS
    (6) TYPE -> . INT
    (7) TYPE -> . FLOAT
    (8) TYPE -> . CHAR

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    TYPE                           shift and go to state 17

state 7

    (10) VARS -> empty .

    VOID            reduce using rule 10 (VARS -> empty .)
    INT             reduce using rule 10 (VARS -> empty .)
    FLOAT           reduce using rule 10 (VARS -> empty .)
    CHAR            reduce using rule 10 (VARS -> empty .)
    MAIN            reduce using rule 10 (VARS -> empty .)
    LCURLY          reduce using rule 10 (VARS -> empty .)


state 8

    (2) PROGRAM_RULE -> PROGRAM ID SEMICOLON VARS BODY . MAIN_RULE
    (3) MAIN_RULE -> . MAIN LPAREN RPAREN LCURLY STATEMENTS RCURLY

    MAIN            shift and go to state 19

    MAIN_RULE                      shift and go to state 18

state 9

    (4) BODY -> FUNCTION_RULE . BODY
    (4) BODY -> . FUNCTION_RULE BODY
    (5) BODY -> . empty
    (15) FUNCTION_RULE -> . FUNCTION_AUX FUNCTION ID LPAREN PARAM RPAREN FUNCTION_BODY
    (1) empty -> .
    (16) FUNCTION_AUX -> . TYPE
    (17) FUNCTION_AUX -> . VOID
    (6) TYPE -> . INT
    (7) TYPE -> . FLOAT
    (8) TYPE -> . CHAR

    MAIN            reduce using rule 1 (empty -> .)
    VOID            shift and go to state 13
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    FUNCTION_RULE                  shift and go to state 9
    BODY                           shift and go to state 20
    empty                          shift and go to state 10
    FUNCTION_AUX                   shift and go to state 11
    TYPE                           shift and go to state 12

state 10

    (5) BODY -> empty .

    MAIN            reduce using rule 5 (BODY -> empty .)


state 11

    (15) FUNCTION_RULE -> FUNCTION_AUX . FUNCTION ID LPAREN PARAM RPAREN FUNCTION_BODY

    FUNCTION        shift and go to state 21


state 12

    (16) FUNCTION_AUX -> TYPE .

    FUNCTION        reduce using rule 16 (FUNCTION_AUX -> TYPE .)


state 13

    (17) FUNCTION_AUX -> VOID .

    FUNCTION        reduce using rule 17 (FUNCTION_AUX -> VOID .)


state 14

    (6) TYPE -> INT .

    FUNCTION        reduce using rule 6 (TYPE -> INT .)
    COLON           reduce using rule 6 (TYPE -> INT .)
    ID              reduce using rule 6 (TYPE -> INT .)


state 15

    (7) TYPE -> FLOAT .

    FUNCTION        reduce using rule 7 (TYPE -> FLOAT .)
    COLON           reduce using rule 7 (TYPE -> FLOAT .)
    ID              reduce using rule 7 (TYPE -> FLOAT .)


state 16

    (8) TYPE -> CHAR .

    FUNCTION        reduce using rule 8 (TYPE -> CHAR .)
    COLON           reduce using rule 8 (TYPE -> CHAR .)
    ID              reduce using rule 8 (TYPE -> CHAR .)


state 17

    (9) VARS -> LET TYPE . COLON ID_LIST SEMICOLON VARS

    COLON           shift and go to state 22


state 18

    (2) PROGRAM_RULE -> PROGRAM ID SEMICOLON VARS BODY MAIN_RULE .

    $end            reduce using rule 2 (PROGRAM_RULE -> PROGRAM ID SEMICOLON VARS BODY MAIN_RULE .)


state 19

    (3) MAIN_RULE -> MAIN . LPAREN RPAREN LCURLY STATEMENTS RCURLY

    LPAREN          shift and go to state 23


state 20

    (4) BODY -> FUNCTION_RULE BODY .

    MAIN            reduce using rule 4 (BODY -> FUNCTION_RULE BODY .)


state 21

    (15) FUNCTION_RULE -> FUNCTION_AUX FUNCTION . ID LPAREN PARAM RPAREN FUNCTION_BODY

    ID              shift and go to state 24


state 22

    (9) VARS -> LET TYPE COLON . ID_LIST SEMICOLON VARS
    (11) ID_LIST -> . ID ID_LIST_AUX
    (12) ID_LIST -> . MULTIDIMENSIONAL ID_LIST_AUX
    (18) MULTIDIMENSIONAL -> . ID LBRACKET CTEI RBRACKET
    (19) MULTIDIMENSIONAL -> . ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET

    ID              shift and go to state 26

    ID_LIST                        shift and go to state 25
    MULTIDIMENSIONAL               shift and go to state 27

state 23

    (3) MAIN_RULE -> MAIN LPAREN . RPAREN LCURLY STATEMENTS RCURLY

    RPAREN          shift and go to state 28


state 24

    (15) FUNCTION_RULE -> FUNCTION_AUX FUNCTION ID . LPAREN PARAM RPAREN FUNCTION_BODY

    LPAREN          shift and go to state 29


state 25

    (9) VARS -> LET TYPE COLON ID_LIST . SEMICOLON VARS

    SEMICOLON       shift and go to state 30


state 26

    (11) ID_LIST -> ID . ID_LIST_AUX
    (18) MULTIDIMENSIONAL -> ID . LBRACKET CTEI RBRACKET
    (19) MULTIDIMENSIONAL -> ID . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (13) ID_LIST_AUX -> . COMMA ID_LIST
    (14) ID_LIST_AUX -> . empty
    (1) empty -> .

    LBRACKET        shift and go to state 32
    COMMA           shift and go to state 33
    SEMICOLON       reduce using rule 1 (empty -> .)

    ID_LIST_AUX                    shift and go to state 31
    empty                          shift and go to state 34

state 27

    (12) ID_LIST -> MULTIDIMENSIONAL . ID_LIST_AUX
    (13) ID_LIST_AUX -> . COMMA ID_LIST
    (14) ID_LIST_AUX -> . empty
    (1) empty -> .

    COMMA           shift and go to state 33
    SEMICOLON       reduce using rule 1 (empty -> .)

    ID_LIST_AUX                    shift and go to state 35
    empty                          shift and go to state 34

state 28

    (3) MAIN_RULE -> MAIN LPAREN RPAREN . LCURLY STATEMENTS RCURLY

    LCURLY          shift and go to state 36


state 29

    (15) FUNCTION_RULE -> FUNCTION_AUX FUNCTION ID LPAREN . PARAM RPAREN FUNCTION_BODY
    (20) PARAM -> . TYPE ID PARAM_AUX
    (21) PARAM -> . empty
    (6) TYPE -> . INT
    (7) TYPE -> . FLOAT
    (8) TYPE -> . CHAR
    (1) empty -> .

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    RPAREN          reduce using rule 1 (empty -> .)

    PARAM                          shift and go to state 37
    TYPE                           shift and go to state 38
    empty                          shift and go to state 39

state 30

    (9) VARS -> LET TYPE COLON ID_LIST SEMICOLON . VARS
    (9) VARS -> . LET TYPE COLON ID_LIST SEMICOLON VARS
    (10) VARS -> . empty
    (1) empty -> .

    LET             shift and go to state 6
    VOID            reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    MAIN            reduce using rule 1 (empty -> .)
    LCURLY          reduce using rule 1 (empty -> .)

    VARS                           shift and go to state 40
    empty                          shift and go to state 7

state 31

    (11) ID_LIST -> ID ID_LIST_AUX .

    SEMICOLON       reduce using rule 11 (ID_LIST -> ID ID_LIST_AUX .)


state 32

    (18) MULTIDIMENSIONAL -> ID LBRACKET . CTEI RBRACKET
    (19) MULTIDIMENSIONAL -> ID LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET

    CTEI            shift and go to state 41


state 33

    (13) ID_LIST_AUX -> COMMA . ID_LIST
    (11) ID_LIST -> . ID ID_LIST_AUX
    (12) ID_LIST -> . MULTIDIMENSIONAL ID_LIST_AUX
    (18) MULTIDIMENSIONAL -> . ID LBRACKET CTEI RBRACKET
    (19) MULTIDIMENSIONAL -> . ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET

    ID              shift and go to state 26

    ID_LIST                        shift and go to state 42
    MULTIDIMENSIONAL               shift and go to state 27

state 34

    (14) ID_LIST_AUX -> empty .

    SEMICOLON       reduce using rule 14 (ID_LIST_AUX -> empty .)


state 35

    (12) ID_LIST -> MULTIDIMENSIONAL ID_LIST_AUX .

    SEMICOLON       reduce using rule 12 (ID_LIST -> MULTIDIMENSIONAL ID_LIST_AUX .)


state 36

    (3) MAIN_RULE -> MAIN LPAREN RPAREN LCURLY . STATEMENTS RCURLY
    (28) STATEMENTS -> . STATEMENTS_AUX
    (29) STATEMENTS -> . empty
    (30) STATEMENTS_AUX -> . ASSIGNMENT STATEMENTS
    (31) STATEMENTS_AUX -> . FUNCTION_CALL STATEMENTS
    (32) STATEMENTS_AUX -> . READ_RULE STATEMENTS
    (33) STATEMENTS_AUX -> . WRITE_RULE STATEMENTS
    (34) STATEMENTS_AUX -> . IF_RULE STATEMENTS
    (35) STATEMENTS_AUX -> . WHILE_RULE STATEMENTS
    (36) STATEMENTS_AUX -> . FOR_RULE STATEMENTS
    (1) empty -> .
    (37) ASSIGNMENT -> . VAR EQUALS EXPRESSION SEMICOLON
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON
    (41) READ_RULE -> . READ LPAREN VAR READ_AUX RPAREN SEMICOLON
    (44) WRITE_RULE -> . WRITE LPAREN WRITE_AUX WRITE_AUX2 RPAREN SEMICOLON
    (53) IF_RULE -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY
    (54) WHILE_RULE -> . WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (55) FOR_RULE -> . FOR LPAREN VAR EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET

    RCURLY          reduce using rule 1 (empty -> .)
    ID              shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59

    STATEMENTS                     shift and go to state 43
    STATEMENTS_AUX                 shift and go to state 44
    empty                          shift and go to state 45
    ASSIGNMENT                     shift and go to state 46
    FUNCTION_CALL                  shift and go to state 47
    READ_RULE                      shift and go to state 48
    WRITE_RULE                     shift and go to state 49
    IF_RULE                        shift and go to state 50
    WHILE_RULE                     shift and go to state 51
    FOR_RULE                       shift and go to state 52
    VAR                            shift and go to state 53

state 37

    (15) FUNCTION_RULE -> FUNCTION_AUX FUNCTION ID LPAREN PARAM . RPAREN FUNCTION_BODY

    RPAREN          shift and go to state 60


state 38

    (20) PARAM -> TYPE . ID PARAM_AUX

    ID              shift and go to state 61


state 39

    (21) PARAM -> empty .

    RPAREN          reduce using rule 21 (PARAM -> empty .)


state 40

    (9) VARS -> LET TYPE COLON ID_LIST SEMICOLON VARS .

    VOID            reduce using rule 9 (VARS -> LET TYPE COLON ID_LIST SEMICOLON VARS .)
    INT             reduce using rule 9 (VARS -> LET TYPE COLON ID_LIST SEMICOLON VARS .)
    FLOAT           reduce using rule 9 (VARS -> LET TYPE COLON ID_LIST SEMICOLON VARS .)
    CHAR            reduce using rule 9 (VARS -> LET TYPE COLON ID_LIST SEMICOLON VARS .)
    MAIN            reduce using rule 9 (VARS -> LET TYPE COLON ID_LIST SEMICOLON VARS .)
    LCURLY          reduce using rule 9 (VARS -> LET TYPE COLON ID_LIST SEMICOLON VARS .)


state 41

    (18) MULTIDIMENSIONAL -> ID LBRACKET CTEI . RBRACKET
    (19) MULTIDIMENSIONAL -> ID LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET

    RBRACKET        shift and go to state 62


state 42

    (13) ID_LIST_AUX -> COMMA ID_LIST .

    SEMICOLON       reduce using rule 13 (ID_LIST_AUX -> COMMA ID_LIST .)


state 43

    (3) MAIN_RULE -> MAIN LPAREN RPAREN LCURLY STATEMENTS . RCURLY

    RCURLY          shift and go to state 63


state 44

    (28) STATEMENTS -> STATEMENTS_AUX .

    RCURLY          reduce using rule 28 (STATEMENTS -> STATEMENTS_AUX .)
    RETURN          reduce using rule 28 (STATEMENTS -> STATEMENTS_AUX .)


state 45

    (29) STATEMENTS -> empty .

    RCURLY          reduce using rule 29 (STATEMENTS -> empty .)
    RETURN          reduce using rule 29 (STATEMENTS -> empty .)


state 46

    (30) STATEMENTS_AUX -> ASSIGNMENT . STATEMENTS
    (28) STATEMENTS -> . STATEMENTS_AUX
    (29) STATEMENTS -> . empty
    (30) STATEMENTS_AUX -> . ASSIGNMENT STATEMENTS
    (31) STATEMENTS_AUX -> . FUNCTION_CALL STATEMENTS
    (32) STATEMENTS_AUX -> . READ_RULE STATEMENTS
    (33) STATEMENTS_AUX -> . WRITE_RULE STATEMENTS
    (34) STATEMENTS_AUX -> . IF_RULE STATEMENTS
    (35) STATEMENTS_AUX -> . WHILE_RULE STATEMENTS
    (36) STATEMENTS_AUX -> . FOR_RULE STATEMENTS
    (1) empty -> .
    (37) ASSIGNMENT -> . VAR EQUALS EXPRESSION SEMICOLON
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON
    (41) READ_RULE -> . READ LPAREN VAR READ_AUX RPAREN SEMICOLON
    (44) WRITE_RULE -> . WRITE LPAREN WRITE_AUX WRITE_AUX2 RPAREN SEMICOLON
    (53) IF_RULE -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY
    (54) WHILE_RULE -> . WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (55) FOR_RULE -> . FOR LPAREN VAR EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET

    RCURLY          reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    ID              shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59

    ASSIGNMENT                     shift and go to state 46
    STATEMENTS                     shift and go to state 64
    STATEMENTS_AUX                 shift and go to state 44
    empty                          shift and go to state 45
    FUNCTION_CALL                  shift and go to state 47
    READ_RULE                      shift and go to state 48
    WRITE_RULE                     shift and go to state 49
    IF_RULE                        shift and go to state 50
    WHILE_RULE                     shift and go to state 51
    FOR_RULE                       shift and go to state 52
    VAR                            shift and go to state 53

state 47

    (31) STATEMENTS_AUX -> FUNCTION_CALL . STATEMENTS
    (28) STATEMENTS -> . STATEMENTS_AUX
    (29) STATEMENTS -> . empty
    (30) STATEMENTS_AUX -> . ASSIGNMENT STATEMENTS
    (31) STATEMENTS_AUX -> . FUNCTION_CALL STATEMENTS
    (32) STATEMENTS_AUX -> . READ_RULE STATEMENTS
    (33) STATEMENTS_AUX -> . WRITE_RULE STATEMENTS
    (34) STATEMENTS_AUX -> . IF_RULE STATEMENTS
    (35) STATEMENTS_AUX -> . WHILE_RULE STATEMENTS
    (36) STATEMENTS_AUX -> . FOR_RULE STATEMENTS
    (1) empty -> .
    (37) ASSIGNMENT -> . VAR EQUALS EXPRESSION SEMICOLON
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON
    (41) READ_RULE -> . READ LPAREN VAR READ_AUX RPAREN SEMICOLON
    (44) WRITE_RULE -> . WRITE LPAREN WRITE_AUX WRITE_AUX2 RPAREN SEMICOLON
    (53) IF_RULE -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY
    (54) WHILE_RULE -> . WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (55) FOR_RULE -> . FOR LPAREN VAR EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET

    RCURLY          reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    ID              shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59

    FUNCTION_CALL                  shift and go to state 47
    STATEMENTS                     shift and go to state 65
    STATEMENTS_AUX                 shift and go to state 44
    empty                          shift and go to state 45
    ASSIGNMENT                     shift and go to state 46
    READ_RULE                      shift and go to state 48
    WRITE_RULE                     shift and go to state 49
    IF_RULE                        shift and go to state 50
    WHILE_RULE                     shift and go to state 51
    FOR_RULE                       shift and go to state 52
    VAR                            shift and go to state 53

state 48

    (32) STATEMENTS_AUX -> READ_RULE . STATEMENTS
    (28) STATEMENTS -> . STATEMENTS_AUX
    (29) STATEMENTS -> . empty
    (30) STATEMENTS_AUX -> . ASSIGNMENT STATEMENTS
    (31) STATEMENTS_AUX -> . FUNCTION_CALL STATEMENTS
    (32) STATEMENTS_AUX -> . READ_RULE STATEMENTS
    (33) STATEMENTS_AUX -> . WRITE_RULE STATEMENTS
    (34) STATEMENTS_AUX -> . IF_RULE STATEMENTS
    (35) STATEMENTS_AUX -> . WHILE_RULE STATEMENTS
    (36) STATEMENTS_AUX -> . FOR_RULE STATEMENTS
    (1) empty -> .
    (37) ASSIGNMENT -> . VAR EQUALS EXPRESSION SEMICOLON
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON
    (41) READ_RULE -> . READ LPAREN VAR READ_AUX RPAREN SEMICOLON
    (44) WRITE_RULE -> . WRITE LPAREN WRITE_AUX WRITE_AUX2 RPAREN SEMICOLON
    (53) IF_RULE -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY
    (54) WHILE_RULE -> . WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (55) FOR_RULE -> . FOR LPAREN VAR EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET

    RCURLY          reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    ID              shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59

    READ_RULE                      shift and go to state 48
    STATEMENTS                     shift and go to state 66
    STATEMENTS_AUX                 shift and go to state 44
    empty                          shift and go to state 45
    ASSIGNMENT                     shift and go to state 46
    FUNCTION_CALL                  shift and go to state 47
    WRITE_RULE                     shift and go to state 49
    IF_RULE                        shift and go to state 50
    WHILE_RULE                     shift and go to state 51
    FOR_RULE                       shift and go to state 52
    VAR                            shift and go to state 53

state 49

    (33) STATEMENTS_AUX -> WRITE_RULE . STATEMENTS
    (28) STATEMENTS -> . STATEMENTS_AUX
    (29) STATEMENTS -> . empty
    (30) STATEMENTS_AUX -> . ASSIGNMENT STATEMENTS
    (31) STATEMENTS_AUX -> . FUNCTION_CALL STATEMENTS
    (32) STATEMENTS_AUX -> . READ_RULE STATEMENTS
    (33) STATEMENTS_AUX -> . WRITE_RULE STATEMENTS
    (34) STATEMENTS_AUX -> . IF_RULE STATEMENTS
    (35) STATEMENTS_AUX -> . WHILE_RULE STATEMENTS
    (36) STATEMENTS_AUX -> . FOR_RULE STATEMENTS
    (1) empty -> .
    (37) ASSIGNMENT -> . VAR EQUALS EXPRESSION SEMICOLON
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON
    (41) READ_RULE -> . READ LPAREN VAR READ_AUX RPAREN SEMICOLON
    (44) WRITE_RULE -> . WRITE LPAREN WRITE_AUX WRITE_AUX2 RPAREN SEMICOLON
    (53) IF_RULE -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY
    (54) WHILE_RULE -> . WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (55) FOR_RULE -> . FOR LPAREN VAR EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET

    RCURLY          reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    ID              shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59

    WRITE_RULE                     shift and go to state 49
    STATEMENTS                     shift and go to state 67
    STATEMENTS_AUX                 shift and go to state 44
    empty                          shift and go to state 45
    ASSIGNMENT                     shift and go to state 46
    FUNCTION_CALL                  shift and go to state 47
    READ_RULE                      shift and go to state 48
    IF_RULE                        shift and go to state 50
    WHILE_RULE                     shift and go to state 51
    FOR_RULE                       shift and go to state 52
    VAR                            shift and go to state 53

state 50

    (34) STATEMENTS_AUX -> IF_RULE . STATEMENTS
    (28) STATEMENTS -> . STATEMENTS_AUX
    (29) STATEMENTS -> . empty
    (30) STATEMENTS_AUX -> . ASSIGNMENT STATEMENTS
    (31) STATEMENTS_AUX -> . FUNCTION_CALL STATEMENTS
    (32) STATEMENTS_AUX -> . READ_RULE STATEMENTS
    (33) STATEMENTS_AUX -> . WRITE_RULE STATEMENTS
    (34) STATEMENTS_AUX -> . IF_RULE STATEMENTS
    (35) STATEMENTS_AUX -> . WHILE_RULE STATEMENTS
    (36) STATEMENTS_AUX -> . FOR_RULE STATEMENTS
    (1) empty -> .
    (37) ASSIGNMENT -> . VAR EQUALS EXPRESSION SEMICOLON
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON
    (41) READ_RULE -> . READ LPAREN VAR READ_AUX RPAREN SEMICOLON
    (44) WRITE_RULE -> . WRITE LPAREN WRITE_AUX WRITE_AUX2 RPAREN SEMICOLON
    (53) IF_RULE -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY
    (54) WHILE_RULE -> . WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (55) FOR_RULE -> . FOR LPAREN VAR EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET

    RCURLY          reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    ID              shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59

    IF_RULE                        shift and go to state 50
    STATEMENTS                     shift and go to state 68
    STATEMENTS_AUX                 shift and go to state 44
    empty                          shift and go to state 45
    ASSIGNMENT                     shift and go to state 46
    FUNCTION_CALL                  shift and go to state 47
    READ_RULE                      shift and go to state 48
    WRITE_RULE                     shift and go to state 49
    WHILE_RULE                     shift and go to state 51
    FOR_RULE                       shift and go to state 52
    VAR                            shift and go to state 53

state 51

    (35) STATEMENTS_AUX -> WHILE_RULE . STATEMENTS
    (28) STATEMENTS -> . STATEMENTS_AUX
    (29) STATEMENTS -> . empty
    (30) STATEMENTS_AUX -> . ASSIGNMENT STATEMENTS
    (31) STATEMENTS_AUX -> . FUNCTION_CALL STATEMENTS
    (32) STATEMENTS_AUX -> . READ_RULE STATEMENTS
    (33) STATEMENTS_AUX -> . WRITE_RULE STATEMENTS
    (34) STATEMENTS_AUX -> . IF_RULE STATEMENTS
    (35) STATEMENTS_AUX -> . WHILE_RULE STATEMENTS
    (36) STATEMENTS_AUX -> . FOR_RULE STATEMENTS
    (1) empty -> .
    (37) ASSIGNMENT -> . VAR EQUALS EXPRESSION SEMICOLON
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON
    (41) READ_RULE -> . READ LPAREN VAR READ_AUX RPAREN SEMICOLON
    (44) WRITE_RULE -> . WRITE LPAREN WRITE_AUX WRITE_AUX2 RPAREN SEMICOLON
    (53) IF_RULE -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY
    (54) WHILE_RULE -> . WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (55) FOR_RULE -> . FOR LPAREN VAR EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET

    RCURLY          reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    ID              shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59

    WHILE_RULE                     shift and go to state 51
    STATEMENTS                     shift and go to state 69
    STATEMENTS_AUX                 shift and go to state 44
    empty                          shift and go to state 45
    ASSIGNMENT                     shift and go to state 46
    FUNCTION_CALL                  shift and go to state 47
    READ_RULE                      shift and go to state 48
    WRITE_RULE                     shift and go to state 49
    IF_RULE                        shift and go to state 50
    FOR_RULE                       shift and go to state 52
    VAR                            shift and go to state 53

state 52

    (36) STATEMENTS_AUX -> FOR_RULE . STATEMENTS
    (28) STATEMENTS -> . STATEMENTS_AUX
    (29) STATEMENTS -> . empty
    (30) STATEMENTS_AUX -> . ASSIGNMENT STATEMENTS
    (31) STATEMENTS_AUX -> . FUNCTION_CALL STATEMENTS
    (32) STATEMENTS_AUX -> . READ_RULE STATEMENTS
    (33) STATEMENTS_AUX -> . WRITE_RULE STATEMENTS
    (34) STATEMENTS_AUX -> . IF_RULE STATEMENTS
    (35) STATEMENTS_AUX -> . WHILE_RULE STATEMENTS
    (36) STATEMENTS_AUX -> . FOR_RULE STATEMENTS
    (1) empty -> .
    (37) ASSIGNMENT -> . VAR EQUALS EXPRESSION SEMICOLON
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON
    (41) READ_RULE -> . READ LPAREN VAR READ_AUX RPAREN SEMICOLON
    (44) WRITE_RULE -> . WRITE LPAREN WRITE_AUX WRITE_AUX2 RPAREN SEMICOLON
    (53) IF_RULE -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY
    (54) WHILE_RULE -> . WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (55) FOR_RULE -> . FOR LPAREN VAR EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET

    RCURLY          reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    ID              shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59

    FOR_RULE                       shift and go to state 52
    STATEMENTS                     shift and go to state 70
    STATEMENTS_AUX                 shift and go to state 44
    empty                          shift and go to state 45
    ASSIGNMENT                     shift and go to state 46
    FUNCTION_CALL                  shift and go to state 47
    READ_RULE                      shift and go to state 48
    WRITE_RULE                     shift and go to state 49
    IF_RULE                        shift and go to state 50
    WHILE_RULE                     shift and go to state 51
    VAR                            shift and go to state 53

state 53

    (37) ASSIGNMENT -> VAR . EQUALS EXPRESSION SEMICOLON

    EQUALS          shift and go to state 71


state 54

    (38) FUNCTION_CALL -> ID . LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON
    (49) VAR -> ID .
    (50) VAR -> ID . LBRACKET EXPRESSION RBRACKET
    (51) VAR -> ID . LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET

    LPAREN          shift and go to state 72
    EQUALS          reduce using rule 49 (VAR -> ID .)
    LBRACKET        shift and go to state 73


state 55

    (41) READ_RULE -> READ . LPAREN VAR READ_AUX RPAREN SEMICOLON

    LPAREN          shift and go to state 74


state 56

    (44) WRITE_RULE -> WRITE . LPAREN WRITE_AUX WRITE_AUX2 RPAREN SEMICOLON

    LPAREN          shift and go to state 75


state 57

    (53) IF_RULE -> IF . LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY

    LPAREN          shift and go to state 76


state 58

    (54) WHILE_RULE -> WHILE . LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY

    LPAREN          shift and go to state 77


state 59

    (55) FOR_RULE -> FOR . LPAREN VAR EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY

    LPAREN          shift and go to state 78


state 60

    (15) FUNCTION_RULE -> FUNCTION_AUX FUNCTION ID LPAREN PARAM RPAREN . FUNCTION_BODY
    (25) FUNCTION_BODY -> . VARS LCURLY STATEMENTS FUNCTION_BODY_AUX RCURLY
    (9) VARS -> . LET TYPE COLON ID_LIST SEMICOLON VARS
    (10) VARS -> . empty
    (1) empty -> .

    LET             shift and go to state 6
    LCURLY          reduce using rule 1 (empty -> .)

    FUNCTION_BODY                  shift and go to state 79
    VARS                           shift and go to state 80
    empty                          shift and go to state 7

state 61

    (20) PARAM -> TYPE ID . PARAM_AUX
    (22) PARAM_AUX -> . COMMA PARAM_AUX2
    (23) PARAM_AUX -> . empty
    (1) empty -> .

    COMMA           shift and go to state 82
    RPAREN          reduce using rule 1 (empty -> .)

    PARAM_AUX                      shift and go to state 81
    empty                          shift and go to state 83

state 62

    (18) MULTIDIMENSIONAL -> ID LBRACKET CTEI RBRACKET .
    (19) MULTIDIMENSIONAL -> ID LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET

    COMMA           reduce using rule 18 (MULTIDIMENSIONAL -> ID LBRACKET CTEI RBRACKET .)
    SEMICOLON       reduce using rule 18 (MULTIDIMENSIONAL -> ID LBRACKET CTEI RBRACKET .)
    LBRACKET        shift and go to state 84


state 63

    (3) MAIN_RULE -> MAIN LPAREN RPAREN LCURLY STATEMENTS RCURLY .

    $end            reduce using rule 3 (MAIN_RULE -> MAIN LPAREN RPAREN LCURLY STATEMENTS RCURLY .)


state 64

    (30) STATEMENTS_AUX -> ASSIGNMENT STATEMENTS .

    RCURLY          reduce using rule 30 (STATEMENTS_AUX -> ASSIGNMENT STATEMENTS .)
    RETURN          reduce using rule 30 (STATEMENTS_AUX -> ASSIGNMENT STATEMENTS .)


state 65

    (31) STATEMENTS_AUX -> FUNCTION_CALL STATEMENTS .

    RCURLY          reduce using rule 31 (STATEMENTS_AUX -> FUNCTION_CALL STATEMENTS .)
    RETURN          reduce using rule 31 (STATEMENTS_AUX -> FUNCTION_CALL STATEMENTS .)


state 66

    (32) STATEMENTS_AUX -> READ_RULE STATEMENTS .

    RCURLY          reduce using rule 32 (STATEMENTS_AUX -> READ_RULE STATEMENTS .)
    RETURN          reduce using rule 32 (STATEMENTS_AUX -> READ_RULE STATEMENTS .)


state 67

    (33) STATEMENTS_AUX -> WRITE_RULE STATEMENTS .

    RCURLY          reduce using rule 33 (STATEMENTS_AUX -> WRITE_RULE STATEMENTS .)
    RETURN          reduce using rule 33 (STATEMENTS_AUX -> WRITE_RULE STATEMENTS .)


state 68

    (34) STATEMENTS_AUX -> IF_RULE STATEMENTS .

    RCURLY          reduce using rule 34 (STATEMENTS_AUX -> IF_RULE STATEMENTS .)
    RETURN          reduce using rule 34 (STATEMENTS_AUX -> IF_RULE STATEMENTS .)


state 69

    (35) STATEMENTS_AUX -> WHILE_RULE STATEMENTS .

    RCURLY          reduce using rule 35 (STATEMENTS_AUX -> WHILE_RULE STATEMENTS .)
    RETURN          reduce using rule 35 (STATEMENTS_AUX -> WHILE_RULE STATEMENTS .)


state 70

    (36) STATEMENTS_AUX -> FOR_RULE STATEMENTS .

    RCURLY          reduce using rule 36 (STATEMENTS_AUX -> FOR_RULE STATEMENTS .)
    RETURN          reduce using rule 36 (STATEMENTS_AUX -> FOR_RULE STATEMENTS .)


state 71

    (37) ASSIGNMENT -> VAR EQUALS . EXPRESSION SEMICOLON
    (56) EXPRESSION -> . AND_EXPRESSION EXPRESSION_AUX
    (59) AND_EXPRESSION -> . COMPARE_EXPRESSION AND_EXPRESSION_AUX
    (62) COMPARE_EXPRESSION -> . ARITHMETIC_EXPRESSION COMPARE_EXPRESSION_AUX ARITHMETIC_EXPRESSION
    (68) ARITHMETIC_EXPRESSION -> . TERM ARITHMETIC_EXPRESSION_AUX
    (73) TERM -> . FACTOR TERM_AUX
    (78) FACTOR -> . LPAREN EXPRESSION RPAREN
    (79) FACTOR -> . CTEI
    (80) FACTOR -> . CTESTRING
    (81) FACTOR -> . CTEF
    (82) FACTOR -> . VAR
    (83) FACTOR -> . FUNCTION_CALL
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON

    LPAREN          shift and go to state 92
    CTEI            shift and go to state 93
    CTESTRING       shift and go to state 94
    CTEF            shift and go to state 95
    ID              shift and go to state 97

    VAR                            shift and go to state 85
    EXPRESSION                     shift and go to state 86
    AND_EXPRESSION                 shift and go to state 87
    COMPARE_EXPRESSION             shift and go to state 88
    ARITHMETIC_EXPRESSION          shift and go to state 89
    TERM                           shift and go to state 90
    FACTOR                         shift and go to state 91
    FUNCTION_CALL                  shift and go to state 96

state 72

    (38) FUNCTION_CALL -> ID LPAREN . EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON
    (56) EXPRESSION -> . AND_EXPRESSION EXPRESSION_AUX
    (59) AND_EXPRESSION -> . COMPARE_EXPRESSION AND_EXPRESSION_AUX
    (62) COMPARE_EXPRESSION -> . ARITHMETIC_EXPRESSION COMPARE_EXPRESSION_AUX ARITHMETIC_EXPRESSION
    (68) ARITHMETIC_EXPRESSION -> . TERM ARITHMETIC_EXPRESSION_AUX
    (73) TERM -> . FACTOR TERM_AUX
    (78) FACTOR -> . LPAREN EXPRESSION RPAREN
    (79) FACTOR -> . CTEI
    (80) FACTOR -> . CTESTRING
    (81) FACTOR -> . CTEF
    (82) FACTOR -> . VAR
    (83) FACTOR -> . FUNCTION_CALL
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON

    LPAREN          shift and go to state 92
    CTEI            shift and go to state 93
    CTESTRING       shift and go to state 94
    CTEF            shift and go to state 95
    ID              shift and go to state 97

    EXPRESSION                     shift and go to state 98
    AND_EXPRESSION                 shift and go to state 87
    COMPARE_EXPRESSION             shift and go to state 88
    ARITHMETIC_EXPRESSION          shift and go to state 89
    TERM                           shift and go to state 90
    FACTOR                         shift and go to state 91
    VAR                            shift and go to state 85
    FUNCTION_CALL                  shift and go to state 96

state 73

    (50) VAR -> ID LBRACKET . EXPRESSION RBRACKET
    (51) VAR -> ID LBRACKET . EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET
    (56) EXPRESSION -> . AND_EXPRESSION EXPRESSION_AUX
    (59) AND_EXPRESSION -> . COMPARE_EXPRESSION AND_EXPRESSION_AUX
    (62) COMPARE_EXPRESSION -> . ARITHMETIC_EXPRESSION COMPARE_EXPRESSION_AUX ARITHMETIC_EXPRESSION
    (68) ARITHMETIC_EXPRESSION -> . TERM ARITHMETIC_EXPRESSION_AUX
    (73) TERM -> . FACTOR TERM_AUX
    (78) FACTOR -> . LPAREN EXPRESSION RPAREN
    (79) FACTOR -> . CTEI
    (80) FACTOR -> . CTESTRING
    (81) FACTOR -> . CTEF
    (82) FACTOR -> . VAR
    (83) FACTOR -> . FUNCTION_CALL
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON

    LPAREN          shift and go to state 92
    CTEI            shift and go to state 93
    CTESTRING       shift and go to state 94
    CTEF            shift and go to state 95
    ID              shift and go to state 97

    EXPRESSION                     shift and go to state 99
    AND_EXPRESSION                 shift and go to state 87
    COMPARE_EXPRESSION             shift and go to state 88
    ARITHMETIC_EXPRESSION          shift and go to state 89
    TERM                           shift and go to state 90
    FACTOR                         shift and go to state 91
    VAR                            shift and go to state 85
    FUNCTION_CALL                  shift and go to state 96

state 74

    (41) READ_RULE -> READ LPAREN . VAR READ_AUX RPAREN SEMICOLON
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET

    ID              shift and go to state 101

    VAR                            shift and go to state 100

state 75

    (44) WRITE_RULE -> WRITE LPAREN . WRITE_AUX WRITE_AUX2 RPAREN SEMICOLON
    (45) WRITE_AUX -> . CTESTRING
    (46) WRITE_AUX -> . EXPRESSION
    (56) EXPRESSION -> . AND_EXPRESSION EXPRESSION_AUX
    (59) AND_EXPRESSION -> . COMPARE_EXPRESSION AND_EXPRESSION_AUX
    (62) COMPARE_EXPRESSION -> . ARITHMETIC_EXPRESSION COMPARE_EXPRESSION_AUX ARITHMETIC_EXPRESSION
    (68) ARITHMETIC_EXPRESSION -> . TERM ARITHMETIC_EXPRESSION_AUX
    (73) TERM -> . FACTOR TERM_AUX
    (78) FACTOR -> . LPAREN EXPRESSION RPAREN
    (79) FACTOR -> . CTEI
    (80) FACTOR -> . CTESTRING
    (81) FACTOR -> . CTEF
    (82) FACTOR -> . VAR
    (83) FACTOR -> . FUNCTION_CALL
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON

    CTESTRING       shift and go to state 103
    LPAREN          shift and go to state 92
    CTEI            shift and go to state 93
    CTEF            shift and go to state 95
    ID              shift and go to state 97

    WRITE_AUX                      shift and go to state 102
    EXPRESSION                     shift and go to state 104
    AND_EXPRESSION                 shift and go to state 87
    COMPARE_EXPRESSION             shift and go to state 88
    ARITHMETIC_EXPRESSION          shift and go to state 89
    TERM                           shift and go to state 90
    FACTOR                         shift and go to state 91
    VAR                            shift and go to state 85
    FUNCTION_CALL                  shift and go to state 96

state 76

    (53) IF_RULE -> IF LPAREN . EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY
    (56) EXPRESSION -> . AND_EXPRESSION EXPRESSION_AUX
    (59) AND_EXPRESSION -> . COMPARE_EXPRESSION AND_EXPRESSION_AUX
    (62) COMPARE_EXPRESSION -> . ARITHMETIC_EXPRESSION COMPARE_EXPRESSION_AUX ARITHMETIC_EXPRESSION
    (68) ARITHMETIC_EXPRESSION -> . TERM ARITHMETIC_EXPRESSION_AUX
    (73) TERM -> . FACTOR TERM_AUX
    (78) FACTOR -> . LPAREN EXPRESSION RPAREN
    (79) FACTOR -> . CTEI
    (80) FACTOR -> . CTESTRING
    (81) FACTOR -> . CTEF
    (82) FACTOR -> . VAR
    (83) FACTOR -> . FUNCTION_CALL
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON

    LPAREN          shift and go to state 92
    CTEI            shift and go to state 93
    CTESTRING       shift and go to state 94
    CTEF            shift and go to state 95
    ID              shift and go to state 97

    EXPRESSION                     shift and go to state 105
    AND_EXPRESSION                 shift and go to state 87
    COMPARE_EXPRESSION             shift and go to state 88
    ARITHMETIC_EXPRESSION          shift and go to state 89
    TERM                           shift and go to state 90
    FACTOR                         shift and go to state 91
    VAR                            shift and go to state 85
    FUNCTION_CALL                  shift and go to state 96

state 77

    (54) WHILE_RULE -> WHILE LPAREN . EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (56) EXPRESSION -> . AND_EXPRESSION EXPRESSION_AUX
    (59) AND_EXPRESSION -> . COMPARE_EXPRESSION AND_EXPRESSION_AUX
    (62) COMPARE_EXPRESSION -> . ARITHMETIC_EXPRESSION COMPARE_EXPRESSION_AUX ARITHMETIC_EXPRESSION
    (68) ARITHMETIC_EXPRESSION -> . TERM ARITHMETIC_EXPRESSION_AUX
    (73) TERM -> . FACTOR TERM_AUX
    (78) FACTOR -> . LPAREN EXPRESSION RPAREN
    (79) FACTOR -> . CTEI
    (80) FACTOR -> . CTESTRING
    (81) FACTOR -> . CTEF
    (82) FACTOR -> . VAR
    (83) FACTOR -> . FUNCTION_CALL
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON

    LPAREN          shift and go to state 92
    CTEI            shift and go to state 93
    CTESTRING       shift and go to state 94
    CTEF            shift and go to state 95
    ID              shift and go to state 97

    EXPRESSION                     shift and go to state 106
    AND_EXPRESSION                 shift and go to state 87
    COMPARE_EXPRESSION             shift and go to state 88
    ARITHMETIC_EXPRESSION          shift and go to state 89
    TERM                           shift and go to state 90
    FACTOR                         shift and go to state 91
    VAR                            shift and go to state 85
    FUNCTION_CALL                  shift and go to state 96

state 78

    (55) FOR_RULE -> FOR LPAREN . VAR EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET

    ID              shift and go to state 101

    VAR                            shift and go to state 107

state 79

    (15) FUNCTION_RULE -> FUNCTION_AUX FUNCTION ID LPAREN PARAM RPAREN FUNCTION_BODY .

    VOID            reduce using rule 15 (FUNCTION_RULE -> FUNCTION_AUX FUNCTION ID LPAREN PARAM RPAREN FUNCTION_BODY .)
    INT             reduce using rule 15 (FUNCTION_RULE -> FUNCTION_AUX FUNCTION ID LPAREN PARAM RPAREN FUNCTION_BODY .)
    FLOAT           reduce using rule 15 (FUNCTION_RULE -> FUNCTION_AUX FUNCTION ID LPAREN PARAM RPAREN FUNCTION_BODY .)
    CHAR            reduce using rule 15 (FUNCTION_RULE -> FUNCTION_AUX FUNCTION ID LPAREN PARAM RPAREN FUNCTION_BODY .)
    MAIN            reduce using rule 15 (FUNCTION_RULE -> FUNCTION_AUX FUNCTION ID LPAREN PARAM RPAREN FUNCTION_BODY .)


state 80

    (25) FUNCTION_BODY -> VARS . LCURLY STATEMENTS FUNCTION_BODY_AUX RCURLY

    LCURLY          shift and go to state 108


state 81

    (20) PARAM -> TYPE ID PARAM_AUX .

    RPAREN          reduce using rule 20 (PARAM -> TYPE ID PARAM_AUX .)


state 82

    (22) PARAM_AUX -> COMMA . PARAM_AUX2
    (24) PARAM_AUX2 -> . TYPE ID PARAM_AUX
    (6) TYPE -> . INT
    (7) TYPE -> . FLOAT
    (8) TYPE -> . CHAR

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    PARAM_AUX2                     shift and go to state 109
    TYPE                           shift and go to state 110

state 83

    (23) PARAM_AUX -> empty .

    RPAREN          reduce using rule 23 (PARAM_AUX -> empty .)


state 84

    (19) MULTIDIMENSIONAL -> ID LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET

    CTEI            shift and go to state 111


state 85

    (82) FACTOR -> VAR .

    MULTIPLY        reduce using rule 82 (FACTOR -> VAR .)
    DIVIDE          reduce using rule 82 (FACTOR -> VAR .)
    PLUS            reduce using rule 82 (FACTOR -> VAR .)
    MINUS           reduce using rule 82 (FACTOR -> VAR .)
    LESSTHAN        reduce using rule 82 (FACTOR -> VAR .)
    GREATERTHAN     reduce using rule 82 (FACTOR -> VAR .)
    DOUBLEEQUALS    reduce using rule 82 (FACTOR -> VAR .)
    NOTEQUALS       reduce using rule 82 (FACTOR -> VAR .)
    AND             reduce using rule 82 (FACTOR -> VAR .)
    OR              reduce using rule 82 (FACTOR -> VAR .)
    SEMICOLON       reduce using rule 82 (FACTOR -> VAR .)
    COMMA           reduce using rule 82 (FACTOR -> VAR .)
    RPAREN          reduce using rule 82 (FACTOR -> VAR .)
    RBRACKET        reduce using rule 82 (FACTOR -> VAR .)
    TO              reduce using rule 82 (FACTOR -> VAR .)
    LPAREN          reduce using rule 82 (FACTOR -> VAR .)
    CTEI            reduce using rule 82 (FACTOR -> VAR .)
    CTESTRING       reduce using rule 82 (FACTOR -> VAR .)
    CTEF            reduce using rule 82 (FACTOR -> VAR .)
    ID              reduce using rule 82 (FACTOR -> VAR .)


state 86

    (37) ASSIGNMENT -> VAR EQUALS EXPRESSION . SEMICOLON

    SEMICOLON       shift and go to state 112


state 87

    (56) EXPRESSION -> AND_EXPRESSION . EXPRESSION_AUX
    (57) EXPRESSION_AUX -> . OR EXPRESSION
    (58) EXPRESSION_AUX -> . empty
    (1) empty -> .

    OR              shift and go to state 114
    SEMICOLON       reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    RBRACKET        reduce using rule 1 (empty -> .)
    TO              reduce using rule 1 (empty -> .)

    EXPRESSION_AUX                 shift and go to state 113
    empty                          shift and go to state 115

state 88

    (59) AND_EXPRESSION -> COMPARE_EXPRESSION . AND_EXPRESSION_AUX
    (60) AND_EXPRESSION_AUX -> . AND AND_EXPRESSION
    (61) AND_EXPRESSION_AUX -> . empty
    (1) empty -> .

    AND             shift and go to state 117
    OR              reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    RBRACKET        reduce using rule 1 (empty -> .)
    TO              reduce using rule 1 (empty -> .)

    AND_EXPRESSION_AUX             shift and go to state 116
    empty                          shift and go to state 118

state 89

    (62) COMPARE_EXPRESSION -> ARITHMETIC_EXPRESSION . COMPARE_EXPRESSION_AUX ARITHMETIC_EXPRESSION
    (63) COMPARE_EXPRESSION_AUX -> . COMPARE_EXPRESSION_AUX2 ARITHMETIC_EXPRESSION
    (64) COMPARE_EXPRESSION_AUX2 -> . LESSTHAN
    (65) COMPARE_EXPRESSION_AUX2 -> . GREATERTHAN
    (66) COMPARE_EXPRESSION_AUX2 -> . DOUBLEEQUALS
    (67) COMPARE_EXPRESSION_AUX2 -> . NOTEQUALS

    LESSTHAN        shift and go to state 121
    GREATERTHAN     shift and go to state 122
    DOUBLEEQUALS    shift and go to state 123
    NOTEQUALS       shift and go to state 124

    COMPARE_EXPRESSION_AUX         shift and go to state 119
    COMPARE_EXPRESSION_AUX2        shift and go to state 120

state 90

    (68) ARITHMETIC_EXPRESSION -> TERM . ARITHMETIC_EXPRESSION_AUX
    (69) ARITHMETIC_EXPRESSION_AUX -> . ARITHMETIC_EXPRESSION_AUX2 ARITHMETIC_EXPRESSION
    (70) ARITHMETIC_EXPRESSION_AUX -> . empty
    (71) ARITHMETIC_EXPRESSION_AUX2 -> . PLUS
    (72) ARITHMETIC_EXPRESSION_AUX2 -> . MINUS
    (1) empty -> .

    PLUS            shift and go to state 128
    MINUS           shift and go to state 129
    LESSTHAN        reduce using rule 1 (empty -> .)
    GREATERTHAN     reduce using rule 1 (empty -> .)
    DOUBLEEQUALS    reduce using rule 1 (empty -> .)
    NOTEQUALS       reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    RBRACKET        reduce using rule 1 (empty -> .)
    TO              reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)
    CTEI            reduce using rule 1 (empty -> .)
    CTESTRING       reduce using rule 1 (empty -> .)
    CTEF            reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)

    ARITHMETIC_EXPRESSION_AUX      shift and go to state 125
    ARITHMETIC_EXPRESSION_AUX2     shift and go to state 126
    empty                          shift and go to state 127

state 91

    (73) TERM -> FACTOR . TERM_AUX
    (74) TERM_AUX -> . TERM_AUX2 TERM
    (75) TERM_AUX -> . empty
    (76) TERM_AUX2 -> . MULTIPLY
    (77) TERM_AUX2 -> . DIVIDE
    (1) empty -> .

    MULTIPLY        shift and go to state 133
    DIVIDE          shift and go to state 134
    PLUS            reduce using rule 1 (empty -> .)
    MINUS           reduce using rule 1 (empty -> .)
    LESSTHAN        reduce using rule 1 (empty -> .)
    GREATERTHAN     reduce using rule 1 (empty -> .)
    DOUBLEEQUALS    reduce using rule 1 (empty -> .)
    NOTEQUALS       reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    RBRACKET        reduce using rule 1 (empty -> .)
    TO              reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)
    CTEI            reduce using rule 1 (empty -> .)
    CTESTRING       reduce using rule 1 (empty -> .)
    CTEF            reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)

    TERM_AUX                       shift and go to state 130
    TERM_AUX2                      shift and go to state 131
    empty                          shift and go to state 132

state 92

    (78) FACTOR -> LPAREN . EXPRESSION RPAREN
    (56) EXPRESSION -> . AND_EXPRESSION EXPRESSION_AUX
    (59) AND_EXPRESSION -> . COMPARE_EXPRESSION AND_EXPRESSION_AUX
    (62) COMPARE_EXPRESSION -> . ARITHMETIC_EXPRESSION COMPARE_EXPRESSION_AUX ARITHMETIC_EXPRESSION
    (68) ARITHMETIC_EXPRESSION -> . TERM ARITHMETIC_EXPRESSION_AUX
    (73) TERM -> . FACTOR TERM_AUX
    (78) FACTOR -> . LPAREN EXPRESSION RPAREN
    (79) FACTOR -> . CTEI
    (80) FACTOR -> . CTESTRING
    (81) FACTOR -> . CTEF
    (82) FACTOR -> . VAR
    (83) FACTOR -> . FUNCTION_CALL
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON

    LPAREN          shift and go to state 92
    CTEI            shift and go to state 93
    CTESTRING       shift and go to state 94
    CTEF            shift and go to state 95
    ID              shift and go to state 97

    EXPRESSION                     shift and go to state 135
    AND_EXPRESSION                 shift and go to state 87
    COMPARE_EXPRESSION             shift and go to state 88
    ARITHMETIC_EXPRESSION          shift and go to state 89
    TERM                           shift and go to state 90
    FACTOR                         shift and go to state 91
    VAR                            shift and go to state 85
    FUNCTION_CALL                  shift and go to state 96

state 93

    (79) FACTOR -> CTEI .

    MULTIPLY        reduce using rule 79 (FACTOR -> CTEI .)
    DIVIDE          reduce using rule 79 (FACTOR -> CTEI .)
    PLUS            reduce using rule 79 (FACTOR -> CTEI .)
    MINUS           reduce using rule 79 (FACTOR -> CTEI .)
    LESSTHAN        reduce using rule 79 (FACTOR -> CTEI .)
    GREATERTHAN     reduce using rule 79 (FACTOR -> CTEI .)
    DOUBLEEQUALS    reduce using rule 79 (FACTOR -> CTEI .)
    NOTEQUALS       reduce using rule 79 (FACTOR -> CTEI .)
    AND             reduce using rule 79 (FACTOR -> CTEI .)
    OR              reduce using rule 79 (FACTOR -> CTEI .)
    SEMICOLON       reduce using rule 79 (FACTOR -> CTEI .)
    COMMA           reduce using rule 79 (FACTOR -> CTEI .)
    RPAREN          reduce using rule 79 (FACTOR -> CTEI .)
    RBRACKET        reduce using rule 79 (FACTOR -> CTEI .)
    TO              reduce using rule 79 (FACTOR -> CTEI .)
    LPAREN          reduce using rule 79 (FACTOR -> CTEI .)
    CTEI            reduce using rule 79 (FACTOR -> CTEI .)
    CTESTRING       reduce using rule 79 (FACTOR -> CTEI .)
    CTEF            reduce using rule 79 (FACTOR -> CTEI .)
    ID              reduce using rule 79 (FACTOR -> CTEI .)


state 94

    (80) FACTOR -> CTESTRING .

    MULTIPLY        reduce using rule 80 (FACTOR -> CTESTRING .)
    DIVIDE          reduce using rule 80 (FACTOR -> CTESTRING .)
    PLUS            reduce using rule 80 (FACTOR -> CTESTRING .)
    MINUS           reduce using rule 80 (FACTOR -> CTESTRING .)
    LESSTHAN        reduce using rule 80 (FACTOR -> CTESTRING .)
    GREATERTHAN     reduce using rule 80 (FACTOR -> CTESTRING .)
    DOUBLEEQUALS    reduce using rule 80 (FACTOR -> CTESTRING .)
    NOTEQUALS       reduce using rule 80 (FACTOR -> CTESTRING .)
    AND             reduce using rule 80 (FACTOR -> CTESTRING .)
    OR              reduce using rule 80 (FACTOR -> CTESTRING .)
    SEMICOLON       reduce using rule 80 (FACTOR -> CTESTRING .)
    COMMA           reduce using rule 80 (FACTOR -> CTESTRING .)
    RPAREN          reduce using rule 80 (FACTOR -> CTESTRING .)
    RBRACKET        reduce using rule 80 (FACTOR -> CTESTRING .)
    TO              reduce using rule 80 (FACTOR -> CTESTRING .)
    LPAREN          reduce using rule 80 (FACTOR -> CTESTRING .)
    CTEI            reduce using rule 80 (FACTOR -> CTESTRING .)
    CTESTRING       reduce using rule 80 (FACTOR -> CTESTRING .)
    CTEF            reduce using rule 80 (FACTOR -> CTESTRING .)
    ID              reduce using rule 80 (FACTOR -> CTESTRING .)


state 95

    (81) FACTOR -> CTEF .

    MULTIPLY        reduce using rule 81 (FACTOR -> CTEF .)
    DIVIDE          reduce using rule 81 (FACTOR -> CTEF .)
    PLUS            reduce using rule 81 (FACTOR -> CTEF .)
    MINUS           reduce using rule 81 (FACTOR -> CTEF .)
    LESSTHAN        reduce using rule 81 (FACTOR -> CTEF .)
    GREATERTHAN     reduce using rule 81 (FACTOR -> CTEF .)
    DOUBLEEQUALS    reduce using rule 81 (FACTOR -> CTEF .)
    NOTEQUALS       reduce using rule 81 (FACTOR -> CTEF .)
    AND             reduce using rule 81 (FACTOR -> CTEF .)
    OR              reduce using rule 81 (FACTOR -> CTEF .)
    SEMICOLON       reduce using rule 81 (FACTOR -> CTEF .)
    COMMA           reduce using rule 81 (FACTOR -> CTEF .)
    RPAREN          reduce using rule 81 (FACTOR -> CTEF .)
    RBRACKET        reduce using rule 81 (FACTOR -> CTEF .)
    TO              reduce using rule 81 (FACTOR -> CTEF .)
    LPAREN          reduce using rule 81 (FACTOR -> CTEF .)
    CTEI            reduce using rule 81 (FACTOR -> CTEF .)
    CTESTRING       reduce using rule 81 (FACTOR -> CTEF .)
    CTEF            reduce using rule 81 (FACTOR -> CTEF .)
    ID              reduce using rule 81 (FACTOR -> CTEF .)


state 96

    (83) FACTOR -> FUNCTION_CALL .

    MULTIPLY        reduce using rule 83 (FACTOR -> FUNCTION_CALL .)
    DIVIDE          reduce using rule 83 (FACTOR -> FUNCTION_CALL .)
    PLUS            reduce using rule 83 (FACTOR -> FUNCTION_CALL .)
    MINUS           reduce using rule 83 (FACTOR -> FUNCTION_CALL .)
    LESSTHAN        reduce using rule 83 (FACTOR -> FUNCTION_CALL .)
    GREATERTHAN     reduce using rule 83 (FACTOR -> FUNCTION_CALL .)
    DOUBLEEQUALS    reduce using rule 83 (FACTOR -> FUNCTION_CALL .)
    NOTEQUALS       reduce using rule 83 (FACTOR -> FUNCTION_CALL .)
    AND             reduce using rule 83 (FACTOR -> FUNCTION_CALL .)
    OR              reduce using rule 83 (FACTOR -> FUNCTION_CALL .)
    SEMICOLON       reduce using rule 83 (FACTOR -> FUNCTION_CALL .)
    COMMA           reduce using rule 83 (FACTOR -> FUNCTION_CALL .)
    RPAREN          reduce using rule 83 (FACTOR -> FUNCTION_CALL .)
    RBRACKET        reduce using rule 83 (FACTOR -> FUNCTION_CALL .)
    TO              reduce using rule 83 (FACTOR -> FUNCTION_CALL .)
    LPAREN          reduce using rule 83 (FACTOR -> FUNCTION_CALL .)
    CTEI            reduce using rule 83 (FACTOR -> FUNCTION_CALL .)
    CTESTRING       reduce using rule 83 (FACTOR -> FUNCTION_CALL .)
    CTEF            reduce using rule 83 (FACTOR -> FUNCTION_CALL .)
    ID              reduce using rule 83 (FACTOR -> FUNCTION_CALL .)


state 97

    (49) VAR -> ID .
    (50) VAR -> ID . LBRACKET EXPRESSION RBRACKET
    (51) VAR -> ID . LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET
    (38) FUNCTION_CALL -> ID . LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON

  ! shift/reduce conflict for LPAREN resolved as shift
    MULTIPLY        reduce using rule 49 (VAR -> ID .)
    DIVIDE          reduce using rule 49 (VAR -> ID .)
    PLUS            reduce using rule 49 (VAR -> ID .)
    MINUS           reduce using rule 49 (VAR -> ID .)
    LESSTHAN        reduce using rule 49 (VAR -> ID .)
    GREATERTHAN     reduce using rule 49 (VAR -> ID .)
    DOUBLEEQUALS    reduce using rule 49 (VAR -> ID .)
    NOTEQUALS       reduce using rule 49 (VAR -> ID .)
    AND             reduce using rule 49 (VAR -> ID .)
    OR              reduce using rule 49 (VAR -> ID .)
    SEMICOLON       reduce using rule 49 (VAR -> ID .)
    COMMA           reduce using rule 49 (VAR -> ID .)
    RPAREN          reduce using rule 49 (VAR -> ID .)
    RBRACKET        reduce using rule 49 (VAR -> ID .)
    TO              reduce using rule 49 (VAR -> ID .)
    CTEI            reduce using rule 49 (VAR -> ID .)
    CTESTRING       reduce using rule 49 (VAR -> ID .)
    CTEF            reduce using rule 49 (VAR -> ID .)
    ID              reduce using rule 49 (VAR -> ID .)
    LBRACKET        shift and go to state 73
    LPAREN          shift and go to state 72

  ! LPAREN          [ reduce using rule 49 (VAR -> ID .) ]


state 98

    (38) FUNCTION_CALL -> ID LPAREN EXPRESSION . FUNCTION_CALL_AUX RPAREN SEMICOLON
    (39) FUNCTION_CALL_AUX -> . COMMA EXPRESSION FUNCTION_CALL_AUX
    (40) FUNCTION_CALL_AUX -> . empty
    (1) empty -> .

    COMMA           shift and go to state 137
    RPAREN          reduce using rule 1 (empty -> .)

    FUNCTION_CALL_AUX              shift and go to state 136
    empty                          shift and go to state 138

state 99

    (50) VAR -> ID LBRACKET EXPRESSION . RBRACKET
    (51) VAR -> ID LBRACKET EXPRESSION . RBRACKET LBRACKET EXPRESSION RBRACKET

    RBRACKET        shift and go to state 139


state 100

    (41) READ_RULE -> READ LPAREN VAR . READ_AUX RPAREN SEMICOLON
    (42) READ_AUX -> . COMMA VAR READ_AUX
    (43) READ_AUX -> . empty
    (1) empty -> .

    COMMA           shift and go to state 141
    RPAREN          reduce using rule 1 (empty -> .)

    READ_AUX                       shift and go to state 140
    empty                          shift and go to state 142

state 101

    (49) VAR -> ID .
    (50) VAR -> ID . LBRACKET EXPRESSION RBRACKET
    (51) VAR -> ID . LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET

    COMMA           reduce using rule 49 (VAR -> ID .)
    RPAREN          reduce using rule 49 (VAR -> ID .)
    EQUALS          reduce using rule 49 (VAR -> ID .)
    LBRACKET        shift and go to state 73


state 102

    (44) WRITE_RULE -> WRITE LPAREN WRITE_AUX . WRITE_AUX2 RPAREN SEMICOLON
    (47) WRITE_AUX2 -> . COMMA WRITE_AUX WRITE_AUX2
    (48) WRITE_AUX2 -> . empty
    (1) empty -> .

    COMMA           shift and go to state 144
    RPAREN          reduce using rule 1 (empty -> .)

    WRITE_AUX2                     shift and go to state 143
    empty                          shift and go to state 145

state 103

    (45) WRITE_AUX -> CTESTRING .
    (80) FACTOR -> CTESTRING .

    COMMA           reduce using rule 45 (WRITE_AUX -> CTESTRING .)
    RPAREN          reduce using rule 45 (WRITE_AUX -> CTESTRING .)
    MULTIPLY        reduce using rule 80 (FACTOR -> CTESTRING .)
    DIVIDE          reduce using rule 80 (FACTOR -> CTESTRING .)
    PLUS            reduce using rule 80 (FACTOR -> CTESTRING .)
    MINUS           reduce using rule 80 (FACTOR -> CTESTRING .)
    LESSTHAN        reduce using rule 80 (FACTOR -> CTESTRING .)
    GREATERTHAN     reduce using rule 80 (FACTOR -> CTESTRING .)
    DOUBLEEQUALS    reduce using rule 80 (FACTOR -> CTESTRING .)
    NOTEQUALS       reduce using rule 80 (FACTOR -> CTESTRING .)


state 104

    (46) WRITE_AUX -> EXPRESSION .

    COMMA           reduce using rule 46 (WRITE_AUX -> EXPRESSION .)
    RPAREN          reduce using rule 46 (WRITE_AUX -> EXPRESSION .)


state 105

    (53) IF_RULE -> IF LPAREN EXPRESSION . RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY

    RPAREN          shift and go to state 146


state 106

    (54) WHILE_RULE -> WHILE LPAREN EXPRESSION . RPAREN LCURLY STATEMENTS RCURLY

    RPAREN          shift and go to state 147


state 107

    (55) FOR_RULE -> FOR LPAREN VAR . EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY

    EQUALS          shift and go to state 148


state 108

    (25) FUNCTION_BODY -> VARS LCURLY . STATEMENTS FUNCTION_BODY_AUX RCURLY
    (28) STATEMENTS -> . STATEMENTS_AUX
    (29) STATEMENTS -> . empty
    (30) STATEMENTS_AUX -> . ASSIGNMENT STATEMENTS
    (31) STATEMENTS_AUX -> . FUNCTION_CALL STATEMENTS
    (32) STATEMENTS_AUX -> . READ_RULE STATEMENTS
    (33) STATEMENTS_AUX -> . WRITE_RULE STATEMENTS
    (34) STATEMENTS_AUX -> . IF_RULE STATEMENTS
    (35) STATEMENTS_AUX -> . WHILE_RULE STATEMENTS
    (36) STATEMENTS_AUX -> . FOR_RULE STATEMENTS
    (1) empty -> .
    (37) ASSIGNMENT -> . VAR EQUALS EXPRESSION SEMICOLON
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON
    (41) READ_RULE -> . READ LPAREN VAR READ_AUX RPAREN SEMICOLON
    (44) WRITE_RULE -> . WRITE LPAREN WRITE_AUX WRITE_AUX2 RPAREN SEMICOLON
    (53) IF_RULE -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY
    (54) WHILE_RULE -> . WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (55) FOR_RULE -> . FOR LPAREN VAR EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET

    RETURN          reduce using rule 1 (empty -> .)
    RCURLY          reduce using rule 1 (empty -> .)
    ID              shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59

    STATEMENTS                     shift and go to state 149
    STATEMENTS_AUX                 shift and go to state 44
    empty                          shift and go to state 45
    ASSIGNMENT                     shift and go to state 46
    FUNCTION_CALL                  shift and go to state 47
    READ_RULE                      shift and go to state 48
    WRITE_RULE                     shift and go to state 49
    IF_RULE                        shift and go to state 50
    WHILE_RULE                     shift and go to state 51
    FOR_RULE                       shift and go to state 52
    VAR                            shift and go to state 53

state 109

    (22) PARAM_AUX -> COMMA PARAM_AUX2 .

    RPAREN          reduce using rule 22 (PARAM_AUX -> COMMA PARAM_AUX2 .)


state 110

    (24) PARAM_AUX2 -> TYPE . ID PARAM_AUX

    ID              shift and go to state 150


state 111

    (19) MULTIDIMENSIONAL -> ID LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET

    RBRACKET        shift and go to state 151


state 112

    (37) ASSIGNMENT -> VAR EQUALS EXPRESSION SEMICOLON .

    ID              reduce using rule 37 (ASSIGNMENT -> VAR EQUALS EXPRESSION SEMICOLON .)
    READ            reduce using rule 37 (ASSIGNMENT -> VAR EQUALS EXPRESSION SEMICOLON .)
    WRITE           reduce using rule 37 (ASSIGNMENT -> VAR EQUALS EXPRESSION SEMICOLON .)
    IF              reduce using rule 37 (ASSIGNMENT -> VAR EQUALS EXPRESSION SEMICOLON .)
    WHILE           reduce using rule 37 (ASSIGNMENT -> VAR EQUALS EXPRESSION SEMICOLON .)
    FOR             reduce using rule 37 (ASSIGNMENT -> VAR EQUALS EXPRESSION SEMICOLON .)
    RCURLY          reduce using rule 37 (ASSIGNMENT -> VAR EQUALS EXPRESSION SEMICOLON .)
    RETURN          reduce using rule 37 (ASSIGNMENT -> VAR EQUALS EXPRESSION SEMICOLON .)


state 113

    (56) EXPRESSION -> AND_EXPRESSION EXPRESSION_AUX .

    SEMICOLON       reduce using rule 56 (EXPRESSION -> AND_EXPRESSION EXPRESSION_AUX .)
    COMMA           reduce using rule 56 (EXPRESSION -> AND_EXPRESSION EXPRESSION_AUX .)
    RPAREN          reduce using rule 56 (EXPRESSION -> AND_EXPRESSION EXPRESSION_AUX .)
    RBRACKET        reduce using rule 56 (EXPRESSION -> AND_EXPRESSION EXPRESSION_AUX .)
    TO              reduce using rule 56 (EXPRESSION -> AND_EXPRESSION EXPRESSION_AUX .)


state 114

    (57) EXPRESSION_AUX -> OR . EXPRESSION
    (56) EXPRESSION -> . AND_EXPRESSION EXPRESSION_AUX
    (59) AND_EXPRESSION -> . COMPARE_EXPRESSION AND_EXPRESSION_AUX
    (62) COMPARE_EXPRESSION -> . ARITHMETIC_EXPRESSION COMPARE_EXPRESSION_AUX ARITHMETIC_EXPRESSION
    (68) ARITHMETIC_EXPRESSION -> . TERM ARITHMETIC_EXPRESSION_AUX
    (73) TERM -> . FACTOR TERM_AUX
    (78) FACTOR -> . LPAREN EXPRESSION RPAREN
    (79) FACTOR -> . CTEI
    (80) FACTOR -> . CTESTRING
    (81) FACTOR -> . CTEF
    (82) FACTOR -> . VAR
    (83) FACTOR -> . FUNCTION_CALL
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON

    LPAREN          shift and go to state 92
    CTEI            shift and go to state 93
    CTESTRING       shift and go to state 94
    CTEF            shift and go to state 95
    ID              shift and go to state 97

    EXPRESSION                     shift and go to state 152
    AND_EXPRESSION                 shift and go to state 87
    COMPARE_EXPRESSION             shift and go to state 88
    ARITHMETIC_EXPRESSION          shift and go to state 89
    TERM                           shift and go to state 90
    FACTOR                         shift and go to state 91
    VAR                            shift and go to state 85
    FUNCTION_CALL                  shift and go to state 96

state 115

    (58) EXPRESSION_AUX -> empty .

    SEMICOLON       reduce using rule 58 (EXPRESSION_AUX -> empty .)
    COMMA           reduce using rule 58 (EXPRESSION_AUX -> empty .)
    RPAREN          reduce using rule 58 (EXPRESSION_AUX -> empty .)
    RBRACKET        reduce using rule 58 (EXPRESSION_AUX -> empty .)
    TO              reduce using rule 58 (EXPRESSION_AUX -> empty .)


state 116

    (59) AND_EXPRESSION -> COMPARE_EXPRESSION AND_EXPRESSION_AUX .

    OR              reduce using rule 59 (AND_EXPRESSION -> COMPARE_EXPRESSION AND_EXPRESSION_AUX .)
    SEMICOLON       reduce using rule 59 (AND_EXPRESSION -> COMPARE_EXPRESSION AND_EXPRESSION_AUX .)
    COMMA           reduce using rule 59 (AND_EXPRESSION -> COMPARE_EXPRESSION AND_EXPRESSION_AUX .)
    RPAREN          reduce using rule 59 (AND_EXPRESSION -> COMPARE_EXPRESSION AND_EXPRESSION_AUX .)
    RBRACKET        reduce using rule 59 (AND_EXPRESSION -> COMPARE_EXPRESSION AND_EXPRESSION_AUX .)
    TO              reduce using rule 59 (AND_EXPRESSION -> COMPARE_EXPRESSION AND_EXPRESSION_AUX .)


state 117

    (60) AND_EXPRESSION_AUX -> AND . AND_EXPRESSION
    (59) AND_EXPRESSION -> . COMPARE_EXPRESSION AND_EXPRESSION_AUX
    (62) COMPARE_EXPRESSION -> . ARITHMETIC_EXPRESSION COMPARE_EXPRESSION_AUX ARITHMETIC_EXPRESSION
    (68) ARITHMETIC_EXPRESSION -> . TERM ARITHMETIC_EXPRESSION_AUX
    (73) TERM -> . FACTOR TERM_AUX
    (78) FACTOR -> . LPAREN EXPRESSION RPAREN
    (79) FACTOR -> . CTEI
    (80) FACTOR -> . CTESTRING
    (81) FACTOR -> . CTEF
    (82) FACTOR -> . VAR
    (83) FACTOR -> . FUNCTION_CALL
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON

    LPAREN          shift and go to state 92
    CTEI            shift and go to state 93
    CTESTRING       shift and go to state 94
    CTEF            shift and go to state 95
    ID              shift and go to state 97

    AND_EXPRESSION                 shift and go to state 153
    COMPARE_EXPRESSION             shift and go to state 88
    ARITHMETIC_EXPRESSION          shift and go to state 89
    TERM                           shift and go to state 90
    FACTOR                         shift and go to state 91
    VAR                            shift and go to state 85
    FUNCTION_CALL                  shift and go to state 96

state 118

    (61) AND_EXPRESSION_AUX -> empty .

    OR              reduce using rule 61 (AND_EXPRESSION_AUX -> empty .)
    SEMICOLON       reduce using rule 61 (AND_EXPRESSION_AUX -> empty .)
    COMMA           reduce using rule 61 (AND_EXPRESSION_AUX -> empty .)
    RPAREN          reduce using rule 61 (AND_EXPRESSION_AUX -> empty .)
    RBRACKET        reduce using rule 61 (AND_EXPRESSION_AUX -> empty .)
    TO              reduce using rule 61 (AND_EXPRESSION_AUX -> empty .)


state 119

    (62) COMPARE_EXPRESSION -> ARITHMETIC_EXPRESSION COMPARE_EXPRESSION_AUX . ARITHMETIC_EXPRESSION
    (68) ARITHMETIC_EXPRESSION -> . TERM ARITHMETIC_EXPRESSION_AUX
    (73) TERM -> . FACTOR TERM_AUX
    (78) FACTOR -> . LPAREN EXPRESSION RPAREN
    (79) FACTOR -> . CTEI
    (80) FACTOR -> . CTESTRING
    (81) FACTOR -> . CTEF
    (82) FACTOR -> . VAR
    (83) FACTOR -> . FUNCTION_CALL
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON

    LPAREN          shift and go to state 92
    CTEI            shift and go to state 93
    CTESTRING       shift and go to state 94
    CTEF            shift and go to state 95
    ID              shift and go to state 97

    ARITHMETIC_EXPRESSION          shift and go to state 154
    TERM                           shift and go to state 90
    FACTOR                         shift and go to state 91
    VAR                            shift and go to state 85
    FUNCTION_CALL                  shift and go to state 96

state 120

    (63) COMPARE_EXPRESSION_AUX -> COMPARE_EXPRESSION_AUX2 . ARITHMETIC_EXPRESSION
    (68) ARITHMETIC_EXPRESSION -> . TERM ARITHMETIC_EXPRESSION_AUX
    (73) TERM -> . FACTOR TERM_AUX
    (78) FACTOR -> . LPAREN EXPRESSION RPAREN
    (79) FACTOR -> . CTEI
    (80) FACTOR -> . CTESTRING
    (81) FACTOR -> . CTEF
    (82) FACTOR -> . VAR
    (83) FACTOR -> . FUNCTION_CALL
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON

    LPAREN          shift and go to state 92
    CTEI            shift and go to state 93
    CTESTRING       shift and go to state 94
    CTEF            shift and go to state 95
    ID              shift and go to state 97

    ARITHMETIC_EXPRESSION          shift and go to state 155
    TERM                           shift and go to state 90
    FACTOR                         shift and go to state 91
    VAR                            shift and go to state 85
    FUNCTION_CALL                  shift and go to state 96

state 121

    (64) COMPARE_EXPRESSION_AUX2 -> LESSTHAN .

    LPAREN          reduce using rule 64 (COMPARE_EXPRESSION_AUX2 -> LESSTHAN .)
    CTEI            reduce using rule 64 (COMPARE_EXPRESSION_AUX2 -> LESSTHAN .)
    CTESTRING       reduce using rule 64 (COMPARE_EXPRESSION_AUX2 -> LESSTHAN .)
    CTEF            reduce using rule 64 (COMPARE_EXPRESSION_AUX2 -> LESSTHAN .)
    ID              reduce using rule 64 (COMPARE_EXPRESSION_AUX2 -> LESSTHAN .)


state 122

    (65) COMPARE_EXPRESSION_AUX2 -> GREATERTHAN .

    LPAREN          reduce using rule 65 (COMPARE_EXPRESSION_AUX2 -> GREATERTHAN .)
    CTEI            reduce using rule 65 (COMPARE_EXPRESSION_AUX2 -> GREATERTHAN .)
    CTESTRING       reduce using rule 65 (COMPARE_EXPRESSION_AUX2 -> GREATERTHAN .)
    CTEF            reduce using rule 65 (COMPARE_EXPRESSION_AUX2 -> GREATERTHAN .)
    ID              reduce using rule 65 (COMPARE_EXPRESSION_AUX2 -> GREATERTHAN .)


state 123

    (66) COMPARE_EXPRESSION_AUX2 -> DOUBLEEQUALS .

    LPAREN          reduce using rule 66 (COMPARE_EXPRESSION_AUX2 -> DOUBLEEQUALS .)
    CTEI            reduce using rule 66 (COMPARE_EXPRESSION_AUX2 -> DOUBLEEQUALS .)
    CTESTRING       reduce using rule 66 (COMPARE_EXPRESSION_AUX2 -> DOUBLEEQUALS .)
    CTEF            reduce using rule 66 (COMPARE_EXPRESSION_AUX2 -> DOUBLEEQUALS .)
    ID              reduce using rule 66 (COMPARE_EXPRESSION_AUX2 -> DOUBLEEQUALS .)


state 124

    (67) COMPARE_EXPRESSION_AUX2 -> NOTEQUALS .

    LPAREN          reduce using rule 67 (COMPARE_EXPRESSION_AUX2 -> NOTEQUALS .)
    CTEI            reduce using rule 67 (COMPARE_EXPRESSION_AUX2 -> NOTEQUALS .)
    CTESTRING       reduce using rule 67 (COMPARE_EXPRESSION_AUX2 -> NOTEQUALS .)
    CTEF            reduce using rule 67 (COMPARE_EXPRESSION_AUX2 -> NOTEQUALS .)
    ID              reduce using rule 67 (COMPARE_EXPRESSION_AUX2 -> NOTEQUALS .)


state 125

    (68) ARITHMETIC_EXPRESSION -> TERM ARITHMETIC_EXPRESSION_AUX .

    LESSTHAN        reduce using rule 68 (ARITHMETIC_EXPRESSION -> TERM ARITHMETIC_EXPRESSION_AUX .)
    GREATERTHAN     reduce using rule 68 (ARITHMETIC_EXPRESSION -> TERM ARITHMETIC_EXPRESSION_AUX .)
    DOUBLEEQUALS    reduce using rule 68 (ARITHMETIC_EXPRESSION -> TERM ARITHMETIC_EXPRESSION_AUX .)
    NOTEQUALS       reduce using rule 68 (ARITHMETIC_EXPRESSION -> TERM ARITHMETIC_EXPRESSION_AUX .)
    AND             reduce using rule 68 (ARITHMETIC_EXPRESSION -> TERM ARITHMETIC_EXPRESSION_AUX .)
    OR              reduce using rule 68 (ARITHMETIC_EXPRESSION -> TERM ARITHMETIC_EXPRESSION_AUX .)
    SEMICOLON       reduce using rule 68 (ARITHMETIC_EXPRESSION -> TERM ARITHMETIC_EXPRESSION_AUX .)
    COMMA           reduce using rule 68 (ARITHMETIC_EXPRESSION -> TERM ARITHMETIC_EXPRESSION_AUX .)
    RPAREN          reduce using rule 68 (ARITHMETIC_EXPRESSION -> TERM ARITHMETIC_EXPRESSION_AUX .)
    RBRACKET        reduce using rule 68 (ARITHMETIC_EXPRESSION -> TERM ARITHMETIC_EXPRESSION_AUX .)
    TO              reduce using rule 68 (ARITHMETIC_EXPRESSION -> TERM ARITHMETIC_EXPRESSION_AUX .)
    LPAREN          reduce using rule 68 (ARITHMETIC_EXPRESSION -> TERM ARITHMETIC_EXPRESSION_AUX .)
    CTEI            reduce using rule 68 (ARITHMETIC_EXPRESSION -> TERM ARITHMETIC_EXPRESSION_AUX .)
    CTESTRING       reduce using rule 68 (ARITHMETIC_EXPRESSION -> TERM ARITHMETIC_EXPRESSION_AUX .)
    CTEF            reduce using rule 68 (ARITHMETIC_EXPRESSION -> TERM ARITHMETIC_EXPRESSION_AUX .)
    ID              reduce using rule 68 (ARITHMETIC_EXPRESSION -> TERM ARITHMETIC_EXPRESSION_AUX .)


state 126

    (69) ARITHMETIC_EXPRESSION_AUX -> ARITHMETIC_EXPRESSION_AUX2 . ARITHMETIC_EXPRESSION
    (68) ARITHMETIC_EXPRESSION -> . TERM ARITHMETIC_EXPRESSION_AUX
    (73) TERM -> . FACTOR TERM_AUX
    (78) FACTOR -> . LPAREN EXPRESSION RPAREN
    (79) FACTOR -> . CTEI
    (80) FACTOR -> . CTESTRING
    (81) FACTOR -> . CTEF
    (82) FACTOR -> . VAR
    (83) FACTOR -> . FUNCTION_CALL
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON

    LPAREN          shift and go to state 92
    CTEI            shift and go to state 93
    CTESTRING       shift and go to state 94
    CTEF            shift and go to state 95
    ID              shift and go to state 97

    ARITHMETIC_EXPRESSION          shift and go to state 156
    TERM                           shift and go to state 90
    FACTOR                         shift and go to state 91
    VAR                            shift and go to state 85
    FUNCTION_CALL                  shift and go to state 96

state 127

    (70) ARITHMETIC_EXPRESSION_AUX -> empty .

    LESSTHAN        reduce using rule 70 (ARITHMETIC_EXPRESSION_AUX -> empty .)
    GREATERTHAN     reduce using rule 70 (ARITHMETIC_EXPRESSION_AUX -> empty .)
    DOUBLEEQUALS    reduce using rule 70 (ARITHMETIC_EXPRESSION_AUX -> empty .)
    NOTEQUALS       reduce using rule 70 (ARITHMETIC_EXPRESSION_AUX -> empty .)
    AND             reduce using rule 70 (ARITHMETIC_EXPRESSION_AUX -> empty .)
    OR              reduce using rule 70 (ARITHMETIC_EXPRESSION_AUX -> empty .)
    SEMICOLON       reduce using rule 70 (ARITHMETIC_EXPRESSION_AUX -> empty .)
    COMMA           reduce using rule 70 (ARITHMETIC_EXPRESSION_AUX -> empty .)
    RPAREN          reduce using rule 70 (ARITHMETIC_EXPRESSION_AUX -> empty .)
    RBRACKET        reduce using rule 70 (ARITHMETIC_EXPRESSION_AUX -> empty .)
    TO              reduce using rule 70 (ARITHMETIC_EXPRESSION_AUX -> empty .)
    LPAREN          reduce using rule 70 (ARITHMETIC_EXPRESSION_AUX -> empty .)
    CTEI            reduce using rule 70 (ARITHMETIC_EXPRESSION_AUX -> empty .)
    CTESTRING       reduce using rule 70 (ARITHMETIC_EXPRESSION_AUX -> empty .)
    CTEF            reduce using rule 70 (ARITHMETIC_EXPRESSION_AUX -> empty .)
    ID              reduce using rule 70 (ARITHMETIC_EXPRESSION_AUX -> empty .)


state 128

    (71) ARITHMETIC_EXPRESSION_AUX2 -> PLUS .

    LPAREN          reduce using rule 71 (ARITHMETIC_EXPRESSION_AUX2 -> PLUS .)
    CTEI            reduce using rule 71 (ARITHMETIC_EXPRESSION_AUX2 -> PLUS .)
    CTESTRING       reduce using rule 71 (ARITHMETIC_EXPRESSION_AUX2 -> PLUS .)
    CTEF            reduce using rule 71 (ARITHMETIC_EXPRESSION_AUX2 -> PLUS .)
    ID              reduce using rule 71 (ARITHMETIC_EXPRESSION_AUX2 -> PLUS .)


state 129

    (72) ARITHMETIC_EXPRESSION_AUX2 -> MINUS .

    LPAREN          reduce using rule 72 (ARITHMETIC_EXPRESSION_AUX2 -> MINUS .)
    CTEI            reduce using rule 72 (ARITHMETIC_EXPRESSION_AUX2 -> MINUS .)
    CTESTRING       reduce using rule 72 (ARITHMETIC_EXPRESSION_AUX2 -> MINUS .)
    CTEF            reduce using rule 72 (ARITHMETIC_EXPRESSION_AUX2 -> MINUS .)
    ID              reduce using rule 72 (ARITHMETIC_EXPRESSION_AUX2 -> MINUS .)


state 130

    (73) TERM -> FACTOR TERM_AUX .

    PLUS            reduce using rule 73 (TERM -> FACTOR TERM_AUX .)
    MINUS           reduce using rule 73 (TERM -> FACTOR TERM_AUX .)
    LESSTHAN        reduce using rule 73 (TERM -> FACTOR TERM_AUX .)
    GREATERTHAN     reduce using rule 73 (TERM -> FACTOR TERM_AUX .)
    DOUBLEEQUALS    reduce using rule 73 (TERM -> FACTOR TERM_AUX .)
    NOTEQUALS       reduce using rule 73 (TERM -> FACTOR TERM_AUX .)
    AND             reduce using rule 73 (TERM -> FACTOR TERM_AUX .)
    OR              reduce using rule 73 (TERM -> FACTOR TERM_AUX .)
    SEMICOLON       reduce using rule 73 (TERM -> FACTOR TERM_AUX .)
    COMMA           reduce using rule 73 (TERM -> FACTOR TERM_AUX .)
    RPAREN          reduce using rule 73 (TERM -> FACTOR TERM_AUX .)
    RBRACKET        reduce using rule 73 (TERM -> FACTOR TERM_AUX .)
    TO              reduce using rule 73 (TERM -> FACTOR TERM_AUX .)
    LPAREN          reduce using rule 73 (TERM -> FACTOR TERM_AUX .)
    CTEI            reduce using rule 73 (TERM -> FACTOR TERM_AUX .)
    CTESTRING       reduce using rule 73 (TERM -> FACTOR TERM_AUX .)
    CTEF            reduce using rule 73 (TERM -> FACTOR TERM_AUX .)
    ID              reduce using rule 73 (TERM -> FACTOR TERM_AUX .)


state 131

    (74) TERM_AUX -> TERM_AUX2 . TERM
    (73) TERM -> . FACTOR TERM_AUX
    (78) FACTOR -> . LPAREN EXPRESSION RPAREN
    (79) FACTOR -> . CTEI
    (80) FACTOR -> . CTESTRING
    (81) FACTOR -> . CTEF
    (82) FACTOR -> . VAR
    (83) FACTOR -> . FUNCTION_CALL
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON

    LPAREN          shift and go to state 92
    CTEI            shift and go to state 93
    CTESTRING       shift and go to state 94
    CTEF            shift and go to state 95
    ID              shift and go to state 97

    TERM                           shift and go to state 157
    FACTOR                         shift and go to state 91
    VAR                            shift and go to state 85
    FUNCTION_CALL                  shift and go to state 96

state 132

    (75) TERM_AUX -> empty .

    PLUS            reduce using rule 75 (TERM_AUX -> empty .)
    MINUS           reduce using rule 75 (TERM_AUX -> empty .)
    LESSTHAN        reduce using rule 75 (TERM_AUX -> empty .)
    GREATERTHAN     reduce using rule 75 (TERM_AUX -> empty .)
    DOUBLEEQUALS    reduce using rule 75 (TERM_AUX -> empty .)
    NOTEQUALS       reduce using rule 75 (TERM_AUX -> empty .)
    AND             reduce using rule 75 (TERM_AUX -> empty .)
    OR              reduce using rule 75 (TERM_AUX -> empty .)
    SEMICOLON       reduce using rule 75 (TERM_AUX -> empty .)
    COMMA           reduce using rule 75 (TERM_AUX -> empty .)
    RPAREN          reduce using rule 75 (TERM_AUX -> empty .)
    RBRACKET        reduce using rule 75 (TERM_AUX -> empty .)
    TO              reduce using rule 75 (TERM_AUX -> empty .)
    LPAREN          reduce using rule 75 (TERM_AUX -> empty .)
    CTEI            reduce using rule 75 (TERM_AUX -> empty .)
    CTESTRING       reduce using rule 75 (TERM_AUX -> empty .)
    CTEF            reduce using rule 75 (TERM_AUX -> empty .)
    ID              reduce using rule 75 (TERM_AUX -> empty .)


state 133

    (76) TERM_AUX2 -> MULTIPLY .

    LPAREN          reduce using rule 76 (TERM_AUX2 -> MULTIPLY .)
    CTEI            reduce using rule 76 (TERM_AUX2 -> MULTIPLY .)
    CTESTRING       reduce using rule 76 (TERM_AUX2 -> MULTIPLY .)
    CTEF            reduce using rule 76 (TERM_AUX2 -> MULTIPLY .)
    ID              reduce using rule 76 (TERM_AUX2 -> MULTIPLY .)


state 134

    (77) TERM_AUX2 -> DIVIDE .

    LPAREN          reduce using rule 77 (TERM_AUX2 -> DIVIDE .)
    CTEI            reduce using rule 77 (TERM_AUX2 -> DIVIDE .)
    CTESTRING       reduce using rule 77 (TERM_AUX2 -> DIVIDE .)
    CTEF            reduce using rule 77 (TERM_AUX2 -> DIVIDE .)
    ID              reduce using rule 77 (TERM_AUX2 -> DIVIDE .)


state 135

    (78) FACTOR -> LPAREN EXPRESSION . RPAREN

    RPAREN          shift and go to state 158


state 136

    (38) FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX . RPAREN SEMICOLON

    RPAREN          shift and go to state 159


state 137

    (39) FUNCTION_CALL_AUX -> COMMA . EXPRESSION FUNCTION_CALL_AUX
    (56) EXPRESSION -> . AND_EXPRESSION EXPRESSION_AUX
    (59) AND_EXPRESSION -> . COMPARE_EXPRESSION AND_EXPRESSION_AUX
    (62) COMPARE_EXPRESSION -> . ARITHMETIC_EXPRESSION COMPARE_EXPRESSION_AUX ARITHMETIC_EXPRESSION
    (68) ARITHMETIC_EXPRESSION -> . TERM ARITHMETIC_EXPRESSION_AUX
    (73) TERM -> . FACTOR TERM_AUX
    (78) FACTOR -> . LPAREN EXPRESSION RPAREN
    (79) FACTOR -> . CTEI
    (80) FACTOR -> . CTESTRING
    (81) FACTOR -> . CTEF
    (82) FACTOR -> . VAR
    (83) FACTOR -> . FUNCTION_CALL
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON

    LPAREN          shift and go to state 92
    CTEI            shift and go to state 93
    CTESTRING       shift and go to state 94
    CTEF            shift and go to state 95
    ID              shift and go to state 97

    EXPRESSION                     shift and go to state 160
    AND_EXPRESSION                 shift and go to state 87
    COMPARE_EXPRESSION             shift and go to state 88
    ARITHMETIC_EXPRESSION          shift and go to state 89
    TERM                           shift and go to state 90
    FACTOR                         shift and go to state 91
    VAR                            shift and go to state 85
    FUNCTION_CALL                  shift and go to state 96

state 138

    (40) FUNCTION_CALL_AUX -> empty .

    RPAREN          reduce using rule 40 (FUNCTION_CALL_AUX -> empty .)


state 139

    (50) VAR -> ID LBRACKET EXPRESSION RBRACKET .
    (51) VAR -> ID LBRACKET EXPRESSION RBRACKET . LBRACKET EXPRESSION RBRACKET

    EQUALS          reduce using rule 50 (VAR -> ID LBRACKET EXPRESSION RBRACKET .)
    MULTIPLY        reduce using rule 50 (VAR -> ID LBRACKET EXPRESSION RBRACKET .)
    DIVIDE          reduce using rule 50 (VAR -> ID LBRACKET EXPRESSION RBRACKET .)
    PLUS            reduce using rule 50 (VAR -> ID LBRACKET EXPRESSION RBRACKET .)
    MINUS           reduce using rule 50 (VAR -> ID LBRACKET EXPRESSION RBRACKET .)
    LESSTHAN        reduce using rule 50 (VAR -> ID LBRACKET EXPRESSION RBRACKET .)
    GREATERTHAN     reduce using rule 50 (VAR -> ID LBRACKET EXPRESSION RBRACKET .)
    DOUBLEEQUALS    reduce using rule 50 (VAR -> ID LBRACKET EXPRESSION RBRACKET .)
    NOTEQUALS       reduce using rule 50 (VAR -> ID LBRACKET EXPRESSION RBRACKET .)
    COMMA           reduce using rule 50 (VAR -> ID LBRACKET EXPRESSION RBRACKET .)
    RPAREN          reduce using rule 50 (VAR -> ID LBRACKET EXPRESSION RBRACKET .)
    AND             reduce using rule 50 (VAR -> ID LBRACKET EXPRESSION RBRACKET .)
    OR              reduce using rule 50 (VAR -> ID LBRACKET EXPRESSION RBRACKET .)
    SEMICOLON       reduce using rule 50 (VAR -> ID LBRACKET EXPRESSION RBRACKET .)
    RBRACKET        reduce using rule 50 (VAR -> ID LBRACKET EXPRESSION RBRACKET .)
    TO              reduce using rule 50 (VAR -> ID LBRACKET EXPRESSION RBRACKET .)
    LPAREN          reduce using rule 50 (VAR -> ID LBRACKET EXPRESSION RBRACKET .)
    CTEI            reduce using rule 50 (VAR -> ID LBRACKET EXPRESSION RBRACKET .)
    CTESTRING       reduce using rule 50 (VAR -> ID LBRACKET EXPRESSION RBRACKET .)
    CTEF            reduce using rule 50 (VAR -> ID LBRACKET EXPRESSION RBRACKET .)
    ID              reduce using rule 50 (VAR -> ID LBRACKET EXPRESSION RBRACKET .)
    LBRACKET        shift and go to state 161


state 140

    (41) READ_RULE -> READ LPAREN VAR READ_AUX . RPAREN SEMICOLON

    RPAREN          shift and go to state 162


state 141

    (42) READ_AUX -> COMMA . VAR READ_AUX
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET

    ID              shift and go to state 101

    VAR                            shift and go to state 163

state 142

    (43) READ_AUX -> empty .

    RPAREN          reduce using rule 43 (READ_AUX -> empty .)


state 143

    (44) WRITE_RULE -> WRITE LPAREN WRITE_AUX WRITE_AUX2 . RPAREN SEMICOLON

    RPAREN          shift and go to state 164


state 144

    (47) WRITE_AUX2 -> COMMA . WRITE_AUX WRITE_AUX2
    (45) WRITE_AUX -> . CTESTRING
    (46) WRITE_AUX -> . EXPRESSION
    (56) EXPRESSION -> . AND_EXPRESSION EXPRESSION_AUX
    (59) AND_EXPRESSION -> . COMPARE_EXPRESSION AND_EXPRESSION_AUX
    (62) COMPARE_EXPRESSION -> . ARITHMETIC_EXPRESSION COMPARE_EXPRESSION_AUX ARITHMETIC_EXPRESSION
    (68) ARITHMETIC_EXPRESSION -> . TERM ARITHMETIC_EXPRESSION_AUX
    (73) TERM -> . FACTOR TERM_AUX
    (78) FACTOR -> . LPAREN EXPRESSION RPAREN
    (79) FACTOR -> . CTEI
    (80) FACTOR -> . CTESTRING
    (81) FACTOR -> . CTEF
    (82) FACTOR -> . VAR
    (83) FACTOR -> . FUNCTION_CALL
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON

    CTESTRING       shift and go to state 103
    LPAREN          shift and go to state 92
    CTEI            shift and go to state 93
    CTEF            shift and go to state 95
    ID              shift and go to state 97

    WRITE_AUX                      shift and go to state 165
    EXPRESSION                     shift and go to state 104
    AND_EXPRESSION                 shift and go to state 87
    COMPARE_EXPRESSION             shift and go to state 88
    ARITHMETIC_EXPRESSION          shift and go to state 89
    TERM                           shift and go to state 90
    FACTOR                         shift and go to state 91
    VAR                            shift and go to state 85
    FUNCTION_CALL                  shift and go to state 96

state 145

    (48) WRITE_AUX2 -> empty .

    RPAREN          reduce using rule 48 (WRITE_AUX2 -> empty .)


state 146

    (53) IF_RULE -> IF LPAREN EXPRESSION RPAREN . LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY

    LCURLY          shift and go to state 166


state 147

    (54) WHILE_RULE -> WHILE LPAREN EXPRESSION RPAREN . LCURLY STATEMENTS RCURLY

    LCURLY          shift and go to state 167


state 148

    (55) FOR_RULE -> FOR LPAREN VAR EQUALS . EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (56) EXPRESSION -> . AND_EXPRESSION EXPRESSION_AUX
    (59) AND_EXPRESSION -> . COMPARE_EXPRESSION AND_EXPRESSION_AUX
    (62) COMPARE_EXPRESSION -> . ARITHMETIC_EXPRESSION COMPARE_EXPRESSION_AUX ARITHMETIC_EXPRESSION
    (68) ARITHMETIC_EXPRESSION -> . TERM ARITHMETIC_EXPRESSION_AUX
    (73) TERM -> . FACTOR TERM_AUX
    (78) FACTOR -> . LPAREN EXPRESSION RPAREN
    (79) FACTOR -> . CTEI
    (80) FACTOR -> . CTESTRING
    (81) FACTOR -> . CTEF
    (82) FACTOR -> . VAR
    (83) FACTOR -> . FUNCTION_CALL
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON

    LPAREN          shift and go to state 92
    CTEI            shift and go to state 93
    CTESTRING       shift and go to state 94
    CTEF            shift and go to state 95
    ID              shift and go to state 97

    VAR                            shift and go to state 85
    EXPRESSION                     shift and go to state 168
    AND_EXPRESSION                 shift and go to state 87
    COMPARE_EXPRESSION             shift and go to state 88
    ARITHMETIC_EXPRESSION          shift and go to state 89
    TERM                           shift and go to state 90
    FACTOR                         shift and go to state 91
    FUNCTION_CALL                  shift and go to state 96

state 149

    (25) FUNCTION_BODY -> VARS LCURLY STATEMENTS . FUNCTION_BODY_AUX RCURLY
    (26) FUNCTION_BODY_AUX -> . FUNCTION_RETURN
    (27) FUNCTION_BODY_AUX -> . empty
    (52) FUNCTION_RETURN -> . RETURN EXPRESSION SEMICOLON
    (1) empty -> .

    RETURN          shift and go to state 172
    RCURLY          reduce using rule 1 (empty -> .)

    FUNCTION_BODY_AUX              shift and go to state 169
    FUNCTION_RETURN                shift and go to state 170
    empty                          shift and go to state 171

state 150

    (24) PARAM_AUX2 -> TYPE ID . PARAM_AUX
    (22) PARAM_AUX -> . COMMA PARAM_AUX2
    (23) PARAM_AUX -> . empty
    (1) empty -> .

    COMMA           shift and go to state 82
    RPAREN          reduce using rule 1 (empty -> .)

    PARAM_AUX                      shift and go to state 173
    empty                          shift and go to state 83

state 151

    (19) MULTIDIMENSIONAL -> ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .

    COMMA           reduce using rule 19 (MULTIDIMENSIONAL -> ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    SEMICOLON       reduce using rule 19 (MULTIDIMENSIONAL -> ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)


state 152

    (57) EXPRESSION_AUX -> OR EXPRESSION .

    SEMICOLON       reduce using rule 57 (EXPRESSION_AUX -> OR EXPRESSION .)
    COMMA           reduce using rule 57 (EXPRESSION_AUX -> OR EXPRESSION .)
    RPAREN          reduce using rule 57 (EXPRESSION_AUX -> OR EXPRESSION .)
    RBRACKET        reduce using rule 57 (EXPRESSION_AUX -> OR EXPRESSION .)
    TO              reduce using rule 57 (EXPRESSION_AUX -> OR EXPRESSION .)


state 153

    (60) AND_EXPRESSION_AUX -> AND AND_EXPRESSION .

    OR              reduce using rule 60 (AND_EXPRESSION_AUX -> AND AND_EXPRESSION .)
    SEMICOLON       reduce using rule 60 (AND_EXPRESSION_AUX -> AND AND_EXPRESSION .)
    COMMA           reduce using rule 60 (AND_EXPRESSION_AUX -> AND AND_EXPRESSION .)
    RPAREN          reduce using rule 60 (AND_EXPRESSION_AUX -> AND AND_EXPRESSION .)
    RBRACKET        reduce using rule 60 (AND_EXPRESSION_AUX -> AND AND_EXPRESSION .)
    TO              reduce using rule 60 (AND_EXPRESSION_AUX -> AND AND_EXPRESSION .)


state 154

    (62) COMPARE_EXPRESSION -> ARITHMETIC_EXPRESSION COMPARE_EXPRESSION_AUX ARITHMETIC_EXPRESSION .

    AND             reduce using rule 62 (COMPARE_EXPRESSION -> ARITHMETIC_EXPRESSION COMPARE_EXPRESSION_AUX ARITHMETIC_EXPRESSION .)
    OR              reduce using rule 62 (COMPARE_EXPRESSION -> ARITHMETIC_EXPRESSION COMPARE_EXPRESSION_AUX ARITHMETIC_EXPRESSION .)
    SEMICOLON       reduce using rule 62 (COMPARE_EXPRESSION -> ARITHMETIC_EXPRESSION COMPARE_EXPRESSION_AUX ARITHMETIC_EXPRESSION .)
    COMMA           reduce using rule 62 (COMPARE_EXPRESSION -> ARITHMETIC_EXPRESSION COMPARE_EXPRESSION_AUX ARITHMETIC_EXPRESSION .)
    RPAREN          reduce using rule 62 (COMPARE_EXPRESSION -> ARITHMETIC_EXPRESSION COMPARE_EXPRESSION_AUX ARITHMETIC_EXPRESSION .)
    RBRACKET        reduce using rule 62 (COMPARE_EXPRESSION -> ARITHMETIC_EXPRESSION COMPARE_EXPRESSION_AUX ARITHMETIC_EXPRESSION .)
    TO              reduce using rule 62 (COMPARE_EXPRESSION -> ARITHMETIC_EXPRESSION COMPARE_EXPRESSION_AUX ARITHMETIC_EXPRESSION .)


state 155

    (63) COMPARE_EXPRESSION_AUX -> COMPARE_EXPRESSION_AUX2 ARITHMETIC_EXPRESSION .

    LPAREN          reduce using rule 63 (COMPARE_EXPRESSION_AUX -> COMPARE_EXPRESSION_AUX2 ARITHMETIC_EXPRESSION .)
    CTEI            reduce using rule 63 (COMPARE_EXPRESSION_AUX -> COMPARE_EXPRESSION_AUX2 ARITHMETIC_EXPRESSION .)
    CTESTRING       reduce using rule 63 (COMPARE_EXPRESSION_AUX -> COMPARE_EXPRESSION_AUX2 ARITHMETIC_EXPRESSION .)
    CTEF            reduce using rule 63 (COMPARE_EXPRESSION_AUX -> COMPARE_EXPRESSION_AUX2 ARITHMETIC_EXPRESSION .)
    ID              reduce using rule 63 (COMPARE_EXPRESSION_AUX -> COMPARE_EXPRESSION_AUX2 ARITHMETIC_EXPRESSION .)


state 156

    (69) ARITHMETIC_EXPRESSION_AUX -> ARITHMETIC_EXPRESSION_AUX2 ARITHMETIC_EXPRESSION .

    LESSTHAN        reduce using rule 69 (ARITHMETIC_EXPRESSION_AUX -> ARITHMETIC_EXPRESSION_AUX2 ARITHMETIC_EXPRESSION .)
    GREATERTHAN     reduce using rule 69 (ARITHMETIC_EXPRESSION_AUX -> ARITHMETIC_EXPRESSION_AUX2 ARITHMETIC_EXPRESSION .)
    DOUBLEEQUALS    reduce using rule 69 (ARITHMETIC_EXPRESSION_AUX -> ARITHMETIC_EXPRESSION_AUX2 ARITHMETIC_EXPRESSION .)
    NOTEQUALS       reduce using rule 69 (ARITHMETIC_EXPRESSION_AUX -> ARITHMETIC_EXPRESSION_AUX2 ARITHMETIC_EXPRESSION .)
    AND             reduce using rule 69 (ARITHMETIC_EXPRESSION_AUX -> ARITHMETIC_EXPRESSION_AUX2 ARITHMETIC_EXPRESSION .)
    OR              reduce using rule 69 (ARITHMETIC_EXPRESSION_AUX -> ARITHMETIC_EXPRESSION_AUX2 ARITHMETIC_EXPRESSION .)
    SEMICOLON       reduce using rule 69 (ARITHMETIC_EXPRESSION_AUX -> ARITHMETIC_EXPRESSION_AUX2 ARITHMETIC_EXPRESSION .)
    COMMA           reduce using rule 69 (ARITHMETIC_EXPRESSION_AUX -> ARITHMETIC_EXPRESSION_AUX2 ARITHMETIC_EXPRESSION .)
    RPAREN          reduce using rule 69 (ARITHMETIC_EXPRESSION_AUX -> ARITHMETIC_EXPRESSION_AUX2 ARITHMETIC_EXPRESSION .)
    RBRACKET        reduce using rule 69 (ARITHMETIC_EXPRESSION_AUX -> ARITHMETIC_EXPRESSION_AUX2 ARITHMETIC_EXPRESSION .)
    TO              reduce using rule 69 (ARITHMETIC_EXPRESSION_AUX -> ARITHMETIC_EXPRESSION_AUX2 ARITHMETIC_EXPRESSION .)
    LPAREN          reduce using rule 69 (ARITHMETIC_EXPRESSION_AUX -> ARITHMETIC_EXPRESSION_AUX2 ARITHMETIC_EXPRESSION .)
    CTEI            reduce using rule 69 (ARITHMETIC_EXPRESSION_AUX -> ARITHMETIC_EXPRESSION_AUX2 ARITHMETIC_EXPRESSION .)
    CTESTRING       reduce using rule 69 (ARITHMETIC_EXPRESSION_AUX -> ARITHMETIC_EXPRESSION_AUX2 ARITHMETIC_EXPRESSION .)
    CTEF            reduce using rule 69 (ARITHMETIC_EXPRESSION_AUX -> ARITHMETIC_EXPRESSION_AUX2 ARITHMETIC_EXPRESSION .)
    ID              reduce using rule 69 (ARITHMETIC_EXPRESSION_AUX -> ARITHMETIC_EXPRESSION_AUX2 ARITHMETIC_EXPRESSION .)


state 157

    (74) TERM_AUX -> TERM_AUX2 TERM .

    PLUS            reduce using rule 74 (TERM_AUX -> TERM_AUX2 TERM .)
    MINUS           reduce using rule 74 (TERM_AUX -> TERM_AUX2 TERM .)
    LESSTHAN        reduce using rule 74 (TERM_AUX -> TERM_AUX2 TERM .)
    GREATERTHAN     reduce using rule 74 (TERM_AUX -> TERM_AUX2 TERM .)
    DOUBLEEQUALS    reduce using rule 74 (TERM_AUX -> TERM_AUX2 TERM .)
    NOTEQUALS       reduce using rule 74 (TERM_AUX -> TERM_AUX2 TERM .)
    AND             reduce using rule 74 (TERM_AUX -> TERM_AUX2 TERM .)
    OR              reduce using rule 74 (TERM_AUX -> TERM_AUX2 TERM .)
    SEMICOLON       reduce using rule 74 (TERM_AUX -> TERM_AUX2 TERM .)
    COMMA           reduce using rule 74 (TERM_AUX -> TERM_AUX2 TERM .)
    RPAREN          reduce using rule 74 (TERM_AUX -> TERM_AUX2 TERM .)
    RBRACKET        reduce using rule 74 (TERM_AUX -> TERM_AUX2 TERM .)
    TO              reduce using rule 74 (TERM_AUX -> TERM_AUX2 TERM .)
    LPAREN          reduce using rule 74 (TERM_AUX -> TERM_AUX2 TERM .)
    CTEI            reduce using rule 74 (TERM_AUX -> TERM_AUX2 TERM .)
    CTESTRING       reduce using rule 74 (TERM_AUX -> TERM_AUX2 TERM .)
    CTEF            reduce using rule 74 (TERM_AUX -> TERM_AUX2 TERM .)
    ID              reduce using rule 74 (TERM_AUX -> TERM_AUX2 TERM .)


state 158

    (78) FACTOR -> LPAREN EXPRESSION RPAREN .

    MULTIPLY        reduce using rule 78 (FACTOR -> LPAREN EXPRESSION RPAREN .)
    DIVIDE          reduce using rule 78 (FACTOR -> LPAREN EXPRESSION RPAREN .)
    PLUS            reduce using rule 78 (FACTOR -> LPAREN EXPRESSION RPAREN .)
    MINUS           reduce using rule 78 (FACTOR -> LPAREN EXPRESSION RPAREN .)
    LESSTHAN        reduce using rule 78 (FACTOR -> LPAREN EXPRESSION RPAREN .)
    GREATERTHAN     reduce using rule 78 (FACTOR -> LPAREN EXPRESSION RPAREN .)
    DOUBLEEQUALS    reduce using rule 78 (FACTOR -> LPAREN EXPRESSION RPAREN .)
    NOTEQUALS       reduce using rule 78 (FACTOR -> LPAREN EXPRESSION RPAREN .)
    AND             reduce using rule 78 (FACTOR -> LPAREN EXPRESSION RPAREN .)
    OR              reduce using rule 78 (FACTOR -> LPAREN EXPRESSION RPAREN .)
    SEMICOLON       reduce using rule 78 (FACTOR -> LPAREN EXPRESSION RPAREN .)
    COMMA           reduce using rule 78 (FACTOR -> LPAREN EXPRESSION RPAREN .)
    RPAREN          reduce using rule 78 (FACTOR -> LPAREN EXPRESSION RPAREN .)
    RBRACKET        reduce using rule 78 (FACTOR -> LPAREN EXPRESSION RPAREN .)
    TO              reduce using rule 78 (FACTOR -> LPAREN EXPRESSION RPAREN .)
    LPAREN          reduce using rule 78 (FACTOR -> LPAREN EXPRESSION RPAREN .)
    CTEI            reduce using rule 78 (FACTOR -> LPAREN EXPRESSION RPAREN .)
    CTESTRING       reduce using rule 78 (FACTOR -> LPAREN EXPRESSION RPAREN .)
    CTEF            reduce using rule 78 (FACTOR -> LPAREN EXPRESSION RPAREN .)
    ID              reduce using rule 78 (FACTOR -> LPAREN EXPRESSION RPAREN .)


state 159

    (38) FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 174


state 160

    (39) FUNCTION_CALL_AUX -> COMMA EXPRESSION . FUNCTION_CALL_AUX
    (39) FUNCTION_CALL_AUX -> . COMMA EXPRESSION FUNCTION_CALL_AUX
    (40) FUNCTION_CALL_AUX -> . empty
    (1) empty -> .

    COMMA           shift and go to state 137
    RPAREN          reduce using rule 1 (empty -> .)

    FUNCTION_CALL_AUX              shift and go to state 175
    empty                          shift and go to state 138

state 161

    (51) VAR -> ID LBRACKET EXPRESSION RBRACKET LBRACKET . EXPRESSION RBRACKET
    (56) EXPRESSION -> . AND_EXPRESSION EXPRESSION_AUX
    (59) AND_EXPRESSION -> . COMPARE_EXPRESSION AND_EXPRESSION_AUX
    (62) COMPARE_EXPRESSION -> . ARITHMETIC_EXPRESSION COMPARE_EXPRESSION_AUX ARITHMETIC_EXPRESSION
    (68) ARITHMETIC_EXPRESSION -> . TERM ARITHMETIC_EXPRESSION_AUX
    (73) TERM -> . FACTOR TERM_AUX
    (78) FACTOR -> . LPAREN EXPRESSION RPAREN
    (79) FACTOR -> . CTEI
    (80) FACTOR -> . CTESTRING
    (81) FACTOR -> . CTEF
    (82) FACTOR -> . VAR
    (83) FACTOR -> . FUNCTION_CALL
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON

    LPAREN          shift and go to state 92
    CTEI            shift and go to state 93
    CTESTRING       shift and go to state 94
    CTEF            shift and go to state 95
    ID              shift and go to state 97

    EXPRESSION                     shift and go to state 176
    AND_EXPRESSION                 shift and go to state 87
    COMPARE_EXPRESSION             shift and go to state 88
    ARITHMETIC_EXPRESSION          shift and go to state 89
    TERM                           shift and go to state 90
    FACTOR                         shift and go to state 91
    VAR                            shift and go to state 85
    FUNCTION_CALL                  shift and go to state 96

state 162

    (41) READ_RULE -> READ LPAREN VAR READ_AUX RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 177


state 163

    (42) READ_AUX -> COMMA VAR . READ_AUX
    (42) READ_AUX -> . COMMA VAR READ_AUX
    (43) READ_AUX -> . empty
    (1) empty -> .

    COMMA           shift and go to state 141
    RPAREN          reduce using rule 1 (empty -> .)

    READ_AUX                       shift and go to state 178
    empty                          shift and go to state 142

state 164

    (44) WRITE_RULE -> WRITE LPAREN WRITE_AUX WRITE_AUX2 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 179


state 165

    (47) WRITE_AUX2 -> COMMA WRITE_AUX . WRITE_AUX2
    (47) WRITE_AUX2 -> . COMMA WRITE_AUX WRITE_AUX2
    (48) WRITE_AUX2 -> . empty
    (1) empty -> .

    COMMA           shift and go to state 144
    RPAREN          reduce using rule 1 (empty -> .)

    WRITE_AUX2                     shift and go to state 180
    empty                          shift and go to state 145

state 166

    (53) IF_RULE -> IF LPAREN EXPRESSION RPAREN LCURLY . STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY
    (28) STATEMENTS -> . STATEMENTS_AUX
    (29) STATEMENTS -> . empty
    (30) STATEMENTS_AUX -> . ASSIGNMENT STATEMENTS
    (31) STATEMENTS_AUX -> . FUNCTION_CALL STATEMENTS
    (32) STATEMENTS_AUX -> . READ_RULE STATEMENTS
    (33) STATEMENTS_AUX -> . WRITE_RULE STATEMENTS
    (34) STATEMENTS_AUX -> . IF_RULE STATEMENTS
    (35) STATEMENTS_AUX -> . WHILE_RULE STATEMENTS
    (36) STATEMENTS_AUX -> . FOR_RULE STATEMENTS
    (1) empty -> .
    (37) ASSIGNMENT -> . VAR EQUALS EXPRESSION SEMICOLON
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON
    (41) READ_RULE -> . READ LPAREN VAR READ_AUX RPAREN SEMICOLON
    (44) WRITE_RULE -> . WRITE LPAREN WRITE_AUX WRITE_AUX2 RPAREN SEMICOLON
    (53) IF_RULE -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY
    (54) WHILE_RULE -> . WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (55) FOR_RULE -> . FOR LPAREN VAR EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET

    RCURLY          reduce using rule 1 (empty -> .)
    ID              shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59

    STATEMENTS                     shift and go to state 181
    STATEMENTS_AUX                 shift and go to state 44
    empty                          shift and go to state 45
    ASSIGNMENT                     shift and go to state 46
    FUNCTION_CALL                  shift and go to state 47
    READ_RULE                      shift and go to state 48
    WRITE_RULE                     shift and go to state 49
    IF_RULE                        shift and go to state 50
    WHILE_RULE                     shift and go to state 51
    FOR_RULE                       shift and go to state 52
    VAR                            shift and go to state 53

state 167

    (54) WHILE_RULE -> WHILE LPAREN EXPRESSION RPAREN LCURLY . STATEMENTS RCURLY
    (28) STATEMENTS -> . STATEMENTS_AUX
    (29) STATEMENTS -> . empty
    (30) STATEMENTS_AUX -> . ASSIGNMENT STATEMENTS
    (31) STATEMENTS_AUX -> . FUNCTION_CALL STATEMENTS
    (32) STATEMENTS_AUX -> . READ_RULE STATEMENTS
    (33) STATEMENTS_AUX -> . WRITE_RULE STATEMENTS
    (34) STATEMENTS_AUX -> . IF_RULE STATEMENTS
    (35) STATEMENTS_AUX -> . WHILE_RULE STATEMENTS
    (36) STATEMENTS_AUX -> . FOR_RULE STATEMENTS
    (1) empty -> .
    (37) ASSIGNMENT -> . VAR EQUALS EXPRESSION SEMICOLON
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON
    (41) READ_RULE -> . READ LPAREN VAR READ_AUX RPAREN SEMICOLON
    (44) WRITE_RULE -> . WRITE LPAREN WRITE_AUX WRITE_AUX2 RPAREN SEMICOLON
    (53) IF_RULE -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY
    (54) WHILE_RULE -> . WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (55) FOR_RULE -> . FOR LPAREN VAR EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET

    RCURLY          reduce using rule 1 (empty -> .)
    ID              shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59

    STATEMENTS                     shift and go to state 182
    STATEMENTS_AUX                 shift and go to state 44
    empty                          shift and go to state 45
    ASSIGNMENT                     shift and go to state 46
    FUNCTION_CALL                  shift and go to state 47
    READ_RULE                      shift and go to state 48
    WRITE_RULE                     shift and go to state 49
    IF_RULE                        shift and go to state 50
    WHILE_RULE                     shift and go to state 51
    FOR_RULE                       shift and go to state 52
    VAR                            shift and go to state 53

state 168

    (55) FOR_RULE -> FOR LPAREN VAR EQUALS EXPRESSION . TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY

    TO              shift and go to state 183


state 169

    (25) FUNCTION_BODY -> VARS LCURLY STATEMENTS FUNCTION_BODY_AUX . RCURLY

    RCURLY          shift and go to state 184


state 170

    (26) FUNCTION_BODY_AUX -> FUNCTION_RETURN .

    RCURLY          reduce using rule 26 (FUNCTION_BODY_AUX -> FUNCTION_RETURN .)


state 171

    (27) FUNCTION_BODY_AUX -> empty .

    RCURLY          reduce using rule 27 (FUNCTION_BODY_AUX -> empty .)


state 172

    (52) FUNCTION_RETURN -> RETURN . EXPRESSION SEMICOLON
    (56) EXPRESSION -> . AND_EXPRESSION EXPRESSION_AUX
    (59) AND_EXPRESSION -> . COMPARE_EXPRESSION AND_EXPRESSION_AUX
    (62) COMPARE_EXPRESSION -> . ARITHMETIC_EXPRESSION COMPARE_EXPRESSION_AUX ARITHMETIC_EXPRESSION
    (68) ARITHMETIC_EXPRESSION -> . TERM ARITHMETIC_EXPRESSION_AUX
    (73) TERM -> . FACTOR TERM_AUX
    (78) FACTOR -> . LPAREN EXPRESSION RPAREN
    (79) FACTOR -> . CTEI
    (80) FACTOR -> . CTESTRING
    (81) FACTOR -> . CTEF
    (82) FACTOR -> . VAR
    (83) FACTOR -> . FUNCTION_CALL
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON

    LPAREN          shift and go to state 92
    CTEI            shift and go to state 93
    CTESTRING       shift and go to state 94
    CTEF            shift and go to state 95
    ID              shift and go to state 97

    EXPRESSION                     shift and go to state 185
    AND_EXPRESSION                 shift and go to state 87
    COMPARE_EXPRESSION             shift and go to state 88
    ARITHMETIC_EXPRESSION          shift and go to state 89
    TERM                           shift and go to state 90
    FACTOR                         shift and go to state 91
    VAR                            shift and go to state 85
    FUNCTION_CALL                  shift and go to state 96

state 173

    (24) PARAM_AUX2 -> TYPE ID PARAM_AUX .

    RPAREN          reduce using rule 24 (PARAM_AUX2 -> TYPE ID PARAM_AUX .)


state 174

    (38) FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .

    ID              reduce using rule 38 (FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .)
    READ            reduce using rule 38 (FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .)
    WRITE           reduce using rule 38 (FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .)
    IF              reduce using rule 38 (FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .)
    WHILE           reduce using rule 38 (FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .)
    FOR             reduce using rule 38 (FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .)
    RCURLY          reduce using rule 38 (FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .)
    RETURN          reduce using rule 38 (FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .)
    MULTIPLY        reduce using rule 38 (FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 38 (FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .)
    PLUS            reduce using rule 38 (FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .)
    MINUS           reduce using rule 38 (FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .)
    LESSTHAN        reduce using rule 38 (FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .)
    GREATERTHAN     reduce using rule 38 (FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .)
    DOUBLEEQUALS    reduce using rule 38 (FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .)
    NOTEQUALS       reduce using rule 38 (FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .)
    AND             reduce using rule 38 (FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .)
    OR              reduce using rule 38 (FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 38 (FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .)
    COMMA           reduce using rule 38 (FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .)
    RPAREN          reduce using rule 38 (FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 38 (FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .)
    TO              reduce using rule 38 (FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .)
    LPAREN          reduce using rule 38 (FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .)
    CTEI            reduce using rule 38 (FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .)
    CTESTRING       reduce using rule 38 (FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .)
    CTEF            reduce using rule 38 (FUNCTION_CALL -> ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON .)


state 175

    (39) FUNCTION_CALL_AUX -> COMMA EXPRESSION FUNCTION_CALL_AUX .

    RPAREN          reduce using rule 39 (FUNCTION_CALL_AUX -> COMMA EXPRESSION FUNCTION_CALL_AUX .)


state 176

    (51) VAR -> ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION . RBRACKET

    RBRACKET        shift and go to state 186


state 177

    (41) READ_RULE -> READ LPAREN VAR READ_AUX RPAREN SEMICOLON .

    ID              reduce using rule 41 (READ_RULE -> READ LPAREN VAR READ_AUX RPAREN SEMICOLON .)
    READ            reduce using rule 41 (READ_RULE -> READ LPAREN VAR READ_AUX RPAREN SEMICOLON .)
    WRITE           reduce using rule 41 (READ_RULE -> READ LPAREN VAR READ_AUX RPAREN SEMICOLON .)
    IF              reduce using rule 41 (READ_RULE -> READ LPAREN VAR READ_AUX RPAREN SEMICOLON .)
    WHILE           reduce using rule 41 (READ_RULE -> READ LPAREN VAR READ_AUX RPAREN SEMICOLON .)
    FOR             reduce using rule 41 (READ_RULE -> READ LPAREN VAR READ_AUX RPAREN SEMICOLON .)
    RCURLY          reduce using rule 41 (READ_RULE -> READ LPAREN VAR READ_AUX RPAREN SEMICOLON .)
    RETURN          reduce using rule 41 (READ_RULE -> READ LPAREN VAR READ_AUX RPAREN SEMICOLON .)


state 178

    (42) READ_AUX -> COMMA VAR READ_AUX .

    RPAREN          reduce using rule 42 (READ_AUX -> COMMA VAR READ_AUX .)


state 179

    (44) WRITE_RULE -> WRITE LPAREN WRITE_AUX WRITE_AUX2 RPAREN SEMICOLON .

    ID              reduce using rule 44 (WRITE_RULE -> WRITE LPAREN WRITE_AUX WRITE_AUX2 RPAREN SEMICOLON .)
    READ            reduce using rule 44 (WRITE_RULE -> WRITE LPAREN WRITE_AUX WRITE_AUX2 RPAREN SEMICOLON .)
    WRITE           reduce using rule 44 (WRITE_RULE -> WRITE LPAREN WRITE_AUX WRITE_AUX2 RPAREN SEMICOLON .)
    IF              reduce using rule 44 (WRITE_RULE -> WRITE LPAREN WRITE_AUX WRITE_AUX2 RPAREN SEMICOLON .)
    WHILE           reduce using rule 44 (WRITE_RULE -> WRITE LPAREN WRITE_AUX WRITE_AUX2 RPAREN SEMICOLON .)
    FOR             reduce using rule 44 (WRITE_RULE -> WRITE LPAREN WRITE_AUX WRITE_AUX2 RPAREN SEMICOLON .)
    RCURLY          reduce using rule 44 (WRITE_RULE -> WRITE LPAREN WRITE_AUX WRITE_AUX2 RPAREN SEMICOLON .)
    RETURN          reduce using rule 44 (WRITE_RULE -> WRITE LPAREN WRITE_AUX WRITE_AUX2 RPAREN SEMICOLON .)


state 180

    (47) WRITE_AUX2 -> COMMA WRITE_AUX WRITE_AUX2 .

    RPAREN          reduce using rule 47 (WRITE_AUX2 -> COMMA WRITE_AUX WRITE_AUX2 .)


state 181

    (53) IF_RULE -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS . RCURLY ELSE LCURLY STATEMENTS RCURLY

    RCURLY          shift and go to state 187


state 182

    (54) WHILE_RULE -> WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENTS . RCURLY

    RCURLY          shift and go to state 188


state 183

    (55) FOR_RULE -> FOR LPAREN VAR EQUALS EXPRESSION TO . EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (56) EXPRESSION -> . AND_EXPRESSION EXPRESSION_AUX
    (59) AND_EXPRESSION -> . COMPARE_EXPRESSION AND_EXPRESSION_AUX
    (62) COMPARE_EXPRESSION -> . ARITHMETIC_EXPRESSION COMPARE_EXPRESSION_AUX ARITHMETIC_EXPRESSION
    (68) ARITHMETIC_EXPRESSION -> . TERM ARITHMETIC_EXPRESSION_AUX
    (73) TERM -> . FACTOR TERM_AUX
    (78) FACTOR -> . LPAREN EXPRESSION RPAREN
    (79) FACTOR -> . CTEI
    (80) FACTOR -> . CTESTRING
    (81) FACTOR -> . CTEF
    (82) FACTOR -> . VAR
    (83) FACTOR -> . FUNCTION_CALL
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON

    LPAREN          shift and go to state 92
    CTEI            shift and go to state 93
    CTESTRING       shift and go to state 94
    CTEF            shift and go to state 95
    ID              shift and go to state 97

    VAR                            shift and go to state 85
    EXPRESSION                     shift and go to state 189
    AND_EXPRESSION                 shift and go to state 87
    COMPARE_EXPRESSION             shift and go to state 88
    ARITHMETIC_EXPRESSION          shift and go to state 89
    TERM                           shift and go to state 90
    FACTOR                         shift and go to state 91
    FUNCTION_CALL                  shift and go to state 96

state 184

    (25) FUNCTION_BODY -> VARS LCURLY STATEMENTS FUNCTION_BODY_AUX RCURLY .

    VOID            reduce using rule 25 (FUNCTION_BODY -> VARS LCURLY STATEMENTS FUNCTION_BODY_AUX RCURLY .)
    INT             reduce using rule 25 (FUNCTION_BODY -> VARS LCURLY STATEMENTS FUNCTION_BODY_AUX RCURLY .)
    FLOAT           reduce using rule 25 (FUNCTION_BODY -> VARS LCURLY STATEMENTS FUNCTION_BODY_AUX RCURLY .)
    CHAR            reduce using rule 25 (FUNCTION_BODY -> VARS LCURLY STATEMENTS FUNCTION_BODY_AUX RCURLY .)
    MAIN            reduce using rule 25 (FUNCTION_BODY -> VARS LCURLY STATEMENTS FUNCTION_BODY_AUX RCURLY .)


state 185

    (52) FUNCTION_RETURN -> RETURN EXPRESSION . SEMICOLON

    SEMICOLON       shift and go to state 190


state 186

    (51) VAR -> ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET .

    EQUALS          reduce using rule 51 (VAR -> ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET .)
    MULTIPLY        reduce using rule 51 (VAR -> ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET .)
    DIVIDE          reduce using rule 51 (VAR -> ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET .)
    PLUS            reduce using rule 51 (VAR -> ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET .)
    MINUS           reduce using rule 51 (VAR -> ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET .)
    LESSTHAN        reduce using rule 51 (VAR -> ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET .)
    GREATERTHAN     reduce using rule 51 (VAR -> ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET .)
    DOUBLEEQUALS    reduce using rule 51 (VAR -> ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET .)
    NOTEQUALS       reduce using rule 51 (VAR -> ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET .)
    COMMA           reduce using rule 51 (VAR -> ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET .)
    RPAREN          reduce using rule 51 (VAR -> ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET .)
    AND             reduce using rule 51 (VAR -> ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET .)
    OR              reduce using rule 51 (VAR -> ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET .)
    SEMICOLON       reduce using rule 51 (VAR -> ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET .)
    RBRACKET        reduce using rule 51 (VAR -> ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET .)
    TO              reduce using rule 51 (VAR -> ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET .)
    LPAREN          reduce using rule 51 (VAR -> ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET .)
    CTEI            reduce using rule 51 (VAR -> ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET .)
    CTESTRING       reduce using rule 51 (VAR -> ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET .)
    CTEF            reduce using rule 51 (VAR -> ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET .)
    ID              reduce using rule 51 (VAR -> ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET .)


state 187

    (53) IF_RULE -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY . ELSE LCURLY STATEMENTS RCURLY

    ELSE            shift and go to state 191


state 188

    (54) WHILE_RULE -> WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY .

    ID              reduce using rule 54 (WHILE_RULE -> WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY .)
    READ            reduce using rule 54 (WHILE_RULE -> WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY .)
    WRITE           reduce using rule 54 (WHILE_RULE -> WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY .)
    IF              reduce using rule 54 (WHILE_RULE -> WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY .)
    WHILE           reduce using rule 54 (WHILE_RULE -> WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY .)
    FOR             reduce using rule 54 (WHILE_RULE -> WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY .)
    RCURLY          reduce using rule 54 (WHILE_RULE -> WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY .)
    RETURN          reduce using rule 54 (WHILE_RULE -> WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY .)


state 189

    (55) FOR_RULE -> FOR LPAREN VAR EQUALS EXPRESSION TO EXPRESSION . RPAREN LCURLY STATEMENTS RCURLY

    RPAREN          shift and go to state 192


state 190

    (52) FUNCTION_RETURN -> RETURN EXPRESSION SEMICOLON .

    RCURLY          reduce using rule 52 (FUNCTION_RETURN -> RETURN EXPRESSION SEMICOLON .)


state 191

    (53) IF_RULE -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE . LCURLY STATEMENTS RCURLY

    LCURLY          shift and go to state 193


state 192

    (55) FOR_RULE -> FOR LPAREN VAR EQUALS EXPRESSION TO EXPRESSION RPAREN . LCURLY STATEMENTS RCURLY

    LCURLY          shift and go to state 194


state 193

    (53) IF_RULE -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY . STATEMENTS RCURLY
    (28) STATEMENTS -> . STATEMENTS_AUX
    (29) STATEMENTS -> . empty
    (30) STATEMENTS_AUX -> . ASSIGNMENT STATEMENTS
    (31) STATEMENTS_AUX -> . FUNCTION_CALL STATEMENTS
    (32) STATEMENTS_AUX -> . READ_RULE STATEMENTS
    (33) STATEMENTS_AUX -> . WRITE_RULE STATEMENTS
    (34) STATEMENTS_AUX -> . IF_RULE STATEMENTS
    (35) STATEMENTS_AUX -> . WHILE_RULE STATEMENTS
    (36) STATEMENTS_AUX -> . FOR_RULE STATEMENTS
    (1) empty -> .
    (37) ASSIGNMENT -> . VAR EQUALS EXPRESSION SEMICOLON
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON
    (41) READ_RULE -> . READ LPAREN VAR READ_AUX RPAREN SEMICOLON
    (44) WRITE_RULE -> . WRITE LPAREN WRITE_AUX WRITE_AUX2 RPAREN SEMICOLON
    (53) IF_RULE -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY
    (54) WHILE_RULE -> . WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (55) FOR_RULE -> . FOR LPAREN VAR EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET

    RCURLY          reduce using rule 1 (empty -> .)
    ID              shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59

    STATEMENTS                     shift and go to state 195
    STATEMENTS_AUX                 shift and go to state 44
    empty                          shift and go to state 45
    ASSIGNMENT                     shift and go to state 46
    FUNCTION_CALL                  shift and go to state 47
    READ_RULE                      shift and go to state 48
    WRITE_RULE                     shift and go to state 49
    IF_RULE                        shift and go to state 50
    WHILE_RULE                     shift and go to state 51
    FOR_RULE                       shift and go to state 52
    VAR                            shift and go to state 53

state 194

    (55) FOR_RULE -> FOR LPAREN VAR EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY . STATEMENTS RCURLY
    (28) STATEMENTS -> . STATEMENTS_AUX
    (29) STATEMENTS -> . empty
    (30) STATEMENTS_AUX -> . ASSIGNMENT STATEMENTS
    (31) STATEMENTS_AUX -> . FUNCTION_CALL STATEMENTS
    (32) STATEMENTS_AUX -> . READ_RULE STATEMENTS
    (33) STATEMENTS_AUX -> . WRITE_RULE STATEMENTS
    (34) STATEMENTS_AUX -> . IF_RULE STATEMENTS
    (35) STATEMENTS_AUX -> . WHILE_RULE STATEMENTS
    (36) STATEMENTS_AUX -> . FOR_RULE STATEMENTS
    (1) empty -> .
    (37) ASSIGNMENT -> . VAR EQUALS EXPRESSION SEMICOLON
    (38) FUNCTION_CALL -> . ID LPAREN EXPRESSION FUNCTION_CALL_AUX RPAREN SEMICOLON
    (41) READ_RULE -> . READ LPAREN VAR READ_AUX RPAREN SEMICOLON
    (44) WRITE_RULE -> . WRITE LPAREN WRITE_AUX WRITE_AUX2 RPAREN SEMICOLON
    (53) IF_RULE -> . IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY
    (54) WHILE_RULE -> . WHILE LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (55) FOR_RULE -> . FOR LPAREN VAR EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY
    (49) VAR -> . ID
    (50) VAR -> . ID LBRACKET EXPRESSION RBRACKET
    (51) VAR -> . ID LBRACKET EXPRESSION RBRACKET LBRACKET EXPRESSION RBRACKET

    RCURLY          reduce using rule 1 (empty -> .)
    ID              shift and go to state 54
    READ            shift and go to state 55
    WRITE           shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    FOR             shift and go to state 59

    VAR                            shift and go to state 53
    STATEMENTS                     shift and go to state 196
    STATEMENTS_AUX                 shift and go to state 44
    empty                          shift and go to state 45
    ASSIGNMENT                     shift and go to state 46
    FUNCTION_CALL                  shift and go to state 47
    READ_RULE                      shift and go to state 48
    WRITE_RULE                     shift and go to state 49
    IF_RULE                        shift and go to state 50
    WHILE_RULE                     shift and go to state 51
    FOR_RULE                       shift and go to state 52

state 195

    (53) IF_RULE -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS . RCURLY

    RCURLY          shift and go to state 197


state 196

    (55) FOR_RULE -> FOR LPAREN VAR EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS . RCURLY

    RCURLY          shift and go to state 198


state 197

    (53) IF_RULE -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY .

    ID              reduce using rule 53 (IF_RULE -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY .)
    READ            reduce using rule 53 (IF_RULE -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY .)
    WRITE           reduce using rule 53 (IF_RULE -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY .)
    IF              reduce using rule 53 (IF_RULE -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY .)
    WHILE           reduce using rule 53 (IF_RULE -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY .)
    FOR             reduce using rule 53 (IF_RULE -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY .)
    RCURLY          reduce using rule 53 (IF_RULE -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY .)
    RETURN          reduce using rule 53 (IF_RULE -> IF LPAREN EXPRESSION RPAREN LCURLY STATEMENTS RCURLY ELSE LCURLY STATEMENTS RCURLY .)


state 198

    (55) FOR_RULE -> FOR LPAREN VAR EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY .

    ID              reduce using rule 55 (FOR_RULE -> FOR LPAREN VAR EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY .)
    READ            reduce using rule 55 (FOR_RULE -> FOR LPAREN VAR EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY .)
    WRITE           reduce using rule 55 (FOR_RULE -> FOR LPAREN VAR EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY .)
    IF              reduce using rule 55 (FOR_RULE -> FOR LPAREN VAR EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY .)
    WHILE           reduce using rule 55 (FOR_RULE -> FOR LPAREN VAR EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY .)
    FOR             reduce using rule 55 (FOR_RULE -> FOR LPAREN VAR EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY .)
    RCURLY          reduce using rule 55 (FOR_RULE -> FOR LPAREN VAR EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY .)
    RETURN          reduce using rule 55 (FOR_RULE -> FOR LPAREN VAR EQUALS EXPRESSION TO EXPRESSION RPAREN LCURLY STATEMENTS RCURLY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 97 resolved as shift
